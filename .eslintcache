[{"D:\\reihan-agam\\react-js\\hiring-channel\\src\\index.js":"1","D:\\reihan-agam\\react-js\\hiring-channel\\src\\store.js":"2","D:\\reihan-agam\\react-js\\hiring-channel\\src\\app.js":"3","D:\\reihan-agam\\react-js\\hiring-channel\\src\\actions\\auth.js":"4","D:\\reihan-agam\\react-js\\hiring-channel\\src\\configs\\theme.js":"5","D:\\reihan-agam\\react-js\\hiring-channel\\src\\utils\\token.js":"6","D:\\reihan-agam\\react-js\\hiring-channel\\src\\components\\layouts\\landing.js":"7","D:\\reihan-agam\\react-js\\hiring-channel\\src\\reducers\\index.js":"8","D:\\reihan-agam\\react-js\\hiring-channel\\src\\components\\route\\index.js":"9","D:\\reihan-agam\\react-js\\hiring-channel\\src\\actions\\types.js":"10","D:\\reihan-agam\\react-js\\hiring-channel\\src\\components\\layouts\\footer.js":"11","D:\\reihan-agam\\react-js\\hiring-channel\\src\\components\\layouts\\header.js":"12","D:\\reihan-agam\\react-js\\hiring-channel\\src\\reducers\\alert.js":"13","D:\\reihan-agam\\react-js\\hiring-channel\\src\\reducers\\auth.js":"14","D:\\reihan-agam\\react-js\\hiring-channel\\src\\reducers\\engineer.js":"15","D:\\reihan-agam\\react-js\\hiring-channel\\src\\reducers\\message.js":"16","D:\\reihan-agam\\react-js\\hiring-channel\\src\\reducers\\company.js":"17","D:\\reihan-agam\\react-js\\hiring-channel\\src\\components\\route\\private\\index.js":"18","D:\\reihan-agam\\react-js\\hiring-channel\\src\\actions\\company.js":"19","D:\\reihan-agam\\react-js\\hiring-channel\\src\\actions\\engineer.js":"20","D:\\reihan-agam\\react-js\\hiring-channel\\src\\components\\avatar\\avatar.js":"21","D:\\reihan-agam\\react-js\\hiring-channel\\src\\components\\layouts\\notfound.js":"22","D:\\reihan-agam\\react-js\\hiring-channel\\src\\components\\engineer\\engineerprofile\\profileedit\\index.js":"23","D:\\reihan-agam\\react-js\\hiring-channel\\src\\components\\auth\\login.js":"24","D:\\reihan-agam\\react-js\\hiring-channel\\src\\components\\auth\\register.js":"25","D:\\reihan-agam\\react-js\\hiring-channel\\src\\components\\company\\index.js":"26","D:\\reihan-agam\\react-js\\hiring-channel\\src\\components\\company\\companyprofile\\index.js":"27","D:\\reihan-agam\\react-js\\hiring-channel\\src\\components\\company\\companyprofile\\profileedit\\index.js":"28","D:\\reihan-agam\\react-js\\hiring-channel\\src\\components\\company\\companyprofile\\profileshow\\index.js":"29","D:\\reihan-agam\\react-js\\hiring-channel\\src\\components\\engineer\\engineerprofile\\index.js":"30","D:\\reihan-agam\\react-js\\hiring-channel\\src\\components\\engineer\\index.js":"31","D:\\reihan-agam\\react-js\\hiring-channel\\src\\configs\\helper.js":"32","D:\\reihan-agam\\react-js\\hiring-channel\\src\\components\\engineer\\engineerprofile\\profileshow\\index.js":"33","D:\\reihan-agam\\react-js\\hiring-channel\\src\\components\\engineer\\engineerprofile\\profileedit\\profileedititem\\profileedititem.js":"34","D:\\reihan-agam\\react-js\\hiring-channel\\src\\components\\layouts\\headerfilter.js":"35","D:\\reihan-agam\\react-js\\hiring-channel\\src\\components\\engineer\\engineerprofile\\profileshow\\profileshowitem\\profileshowitem.js":"36","D:\\reihan-agam\\react-js\\hiring-channel\\src\\actions\\message.js":"37","D:\\reihan-agam\\react-js\\hiring-channel\\src\\components\\spinner\\index.js":"38","D:\\reihan-agam\\react-js\\hiring-channel\\src\\components\\engineer\\engineerlist\\index.js":"39","D:\\reihan-agam\\react-js\\hiring-channel\\src\\components\\engineer\\engineerprofile\\profileskillsitem\\profileskillsitem.js":"40","D:\\reihan-agam\\react-js\\hiring-channel\\src\\components\\layouts\\dataempty.js":"41","D:\\reihan-agam\\react-js\\hiring-channel\\src\\components\\engineer\\engineerprofile\\profileshow\\messagelists\\index.js":"42","D:\\reihan-agam\\react-js\\hiring-channel\\src\\components\\engineer\\engineerprofile\\profileshow\\conversationlists\\index.js":"43","D:\\reihan-agam\\react-js\\hiring-channel\\src\\actions\\engineer-router.js":"44","D:\\reihan-agam\\react-js\\hiring-channel\\src\\actions\\company-router.js":"45","D:\\reihan-agam\\react-js\\hiring-channel\\src\\components\\engineer\\engineerprofile\\profileitem\\profileitem.js":"46","D:\\reihan-agam\\react-js\\hiring-channel\\src\\components\\engineer\\engineeritem\\index.js":"47","D:\\reihan-agam\\react-js\\hiring-channel\\src\\components\\company\\companylist\\index.js":"48","D:\\reihan-agam\\react-js\\hiring-channel\\src\\lib\\query-string\\index.js":"49"},{"size":482,"mtime":1608812167643,"results":"50","hashOfConfig":"51"},{"size":555,"mtime":1608811772408,"results":"52","hashOfConfig":"51"},{"size":839,"mtime":1608812187713,"results":"53","hashOfConfig":"51"},{"size":4071,"mtime":1608910566293,"results":"54","hashOfConfig":"51"},{"size":694,"mtime":1608642183479,"results":"55","hashOfConfig":"51"},{"size":242,"mtime":1608534426114,"results":"56","hashOfConfig":"51"},{"size":758,"mtime":1608884025431,"results":"57","hashOfConfig":"51"},{"size":447,"mtime":1586279697307,"results":"58","hashOfConfig":"51"},{"size":1607,"mtime":1608867874603,"results":"59","hashOfConfig":"51"},{"size":3591,"mtime":1608897149632,"results":"60","hashOfConfig":"51"},{"size":122,"mtime":1608865616386,"results":"61","hashOfConfig":"51"},{"size":9821,"mtime":1609064944744,"results":"62","hashOfConfig":"51"},{"size":377,"mtime":1608381635475,"results":"63","hashOfConfig":"51"},{"size":1047,"mtime":1608645429483,"results":"64","hashOfConfig":"51"},{"size":2184,"mtime":1609063486929,"results":"65","hashOfConfig":"51"},{"size":2407,"mtime":1608899848022,"results":"66","hashOfConfig":"51"},{"size":1940,"mtime":1608642320496,"results":"67","hashOfConfig":"51"},{"size":458,"mtime":1608812060079,"results":"68","hashOfConfig":"51"},{"size":2961,"mtime":1588610228788,"results":"69","hashOfConfig":"51"},{"size":3247,"mtime":1608897178651,"results":"70","hashOfConfig":"51"},{"size":771,"mtime":1608959732274,"results":"71","hashOfConfig":"51"},{"size":216,"mtime":1608865222946,"results":"72","hashOfConfig":"51"},{"size":1182,"mtime":1609007200934,"results":"73","hashOfConfig":"51"},{"size":2347,"mtime":1608802574947,"results":"74","hashOfConfig":"51"},{"size":4148,"mtime":1608910483463,"results":"75","hashOfConfig":"51"},{"size":2660,"mtime":1608811861482,"results":"76","hashOfConfig":"51"},{"size":2820,"mtime":1608811855721,"results":"77","hashOfConfig":"51"},{"size":8754,"mtime":1608811846276,"results":"78","hashOfConfig":"51"},{"size":2378,"mtime":1608811850725,"results":"79","hashOfConfig":"51"},{"size":708,"mtime":1608811893793,"results":"80","hashOfConfig":"51"},{"size":2604,"mtime":1609089660188,"results":"81","hashOfConfig":"51"},{"size":1126,"mtime":1608644246305,"results":"82","hashOfConfig":"51"},{"size":1705,"mtime":1608903708199,"results":"83","hashOfConfig":"51"},{"size":13205,"mtime":1609088331825,"results":"84","hashOfConfig":"51"},{"size":3746,"mtime":1609089635002,"results":"85","hashOfConfig":"51"},{"size":8401,"mtime":1609086275352,"results":"86","hashOfConfig":"51"},{"size":4329,"mtime":1608976367048,"results":"87","hashOfConfig":"51"},{"size":352,"mtime":1608884089254,"results":"88","hashOfConfig":"51"},{"size":407,"mtime":1608959316851,"results":"89","hashOfConfig":"51"},{"size":288,"mtime":1609062834423,"results":"90","hashOfConfig":"51"},{"size":161,"mtime":1608812014512,"results":"91","hashOfConfig":"51"},{"size":1093,"mtime":1608994854698,"results":"92","hashOfConfig":"51"},{"size":4833,"mtime":1608996237300,"results":"93","hashOfConfig":"51"},{"size":666,"mtime":1609029019112,"results":"94","hashOfConfig":"51"},{"size":700,"mtime":1588609150799,"results":"95","hashOfConfig":"51"},{"size":4314,"mtime":1609089602997,"results":"96","hashOfConfig":"51"},{"size":1959,"mtime":1609071075288,"results":"97","hashOfConfig":"51"},{"size":2147,"mtime":1608811838903,"results":"98","hashOfConfig":"51"},{"size":873,"mtime":1608532952457,"results":"99","hashOfConfig":"51"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},"ujubtp",{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"102"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"102"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"102"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"102"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"102"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"102"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"102"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"102"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"102"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"102"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"102"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"182","messages":"183","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188","usedDeprecatedRules":"102"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191","usedDeprecatedRules":"102"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},"D:\\reihan-agam\\react-js\\hiring-channel\\src\\index.js",[],["212","213"],"D:\\reihan-agam\\react-js\\hiring-channel\\src\\store.js",[],"D:\\reihan-agam\\react-js\\hiring-channel\\src\\app.js",[],"D:\\reihan-agam\\react-js\\hiring-channel\\src\\actions\\auth.js",[],"D:\\reihan-agam\\react-js\\hiring-channel\\src\\configs\\theme.js",[],"D:\\reihan-agam\\react-js\\hiring-channel\\src\\utils\\token.js",[],"D:\\reihan-agam\\react-js\\hiring-channel\\src\\components\\layouts\\landing.js",[],"D:\\reihan-agam\\react-js\\hiring-channel\\src\\reducers\\index.js",[],"D:\\reihan-agam\\react-js\\hiring-channel\\src\\components\\route\\index.js",[],"D:\\reihan-agam\\react-js\\hiring-channel\\src\\actions\\types.js",[],"D:\\reihan-agam\\react-js\\hiring-channel\\src\\components\\layouts\\footer.js",[],"D:\\reihan-agam\\react-js\\hiring-channel\\src\\components\\layouts\\header.js",["214","215"],"import React, { useState, useEffect } from \"react\"\r\nimport { connect } from \"react-redux\"\r\nimport { Link, withRouter } from \"react-router-dom\"\r\nimport { AppBar, Toolbar, InputBase, IconButton, Menu, MenuItem, fade, makeStyles } from \"@material-ui/core\"\r\nimport { logout } from \"../../actions/auth\"\r\nimport { getCurrentProfileCompany } from \"../../actions/company\"\r\nimport { getCurrentProfileEngineer } from \"../../actions/engineer\"\r\nimport AvatarComponent from \"../avatar/avatar\"\r\nimport SearchIcon from \"@material-ui/icons/Search\"\r\nconst Header = ({ engineer, company, location, logout, user, isAuthenticated, getCurrentProfileEngineer, getCurrentProfileCompany, handleSearchEngineer, handleSearchCompany, querySearchEngineer, querySearchCompany }) => {\r\n  const logoutUser = () => {\r\n    logout()\r\n    handleMenuClose()\r\n  }\r\n  const useStyles = makeStyles(theme => ({\r\n    grow: {\r\n      flexGrow: 1\r\n    },\r\n    menuButton: {\r\n      marginRight: theme.spacing(2)\r\n    },\r\n    large: {\r\n      width: theme.spacing(4),\r\n      height: theme.spacing(4)\r\n    },\r\n    title: {\r\n      display: \"none\",\r\n      [theme.breakpoints.up(\"sm\")]: {\r\n        display: \"block\"\r\n      }\r\n    },\r\n    search: {\r\n      position: \"relative\",\r\n      borderRadius: theme.shape.borderRadius,\r\n      backgroundColor: fade(theme.palette.common.white, 0.15),\r\n      \"&:hover\": {\r\n        backgroundColor: fade(theme.palette.common.white, 0.25)\r\n      },\r\n      marginRight: theme.spacing(2),\r\n      marginLeft: 0,\r\n      width: \"100%\",\r\n      [theme.breakpoints.up(\"sm\")]: {\r\n        marginLeft: theme.spacing(3),\r\n        width: \"auto\"\r\n      }\r\n    },\r\n    searchIcon: {\r\n      width: theme.spacing(7),\r\n      height: \"100%\",\r\n      position: \"absolute\",\r\n      pointerEvents: \"none\",\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      justifyContent: \"center\"\r\n    },\r\n    inputRoot: {\r\n      color: \"inherit\"\r\n    },\r\n    inputInput: {\r\n      padding: theme.spacing(1, 1, 1, 7),\r\n      transition: theme.transitions.create(\"width\"),\r\n      width: \"100%\",\r\n      [theme.breakpoints.up(\"md\")]: {\r\n        width: 200\r\n      }\r\n    },\r\n    sectionDesktop: {\r\n      display: \"none\",\r\n      [theme.breakpoints.up(\"md\")]: {\r\n        display: \"flex\"\r\n      }\r\n    },\r\n    sectionMobile: {\r\n      display: \"flex\",\r\n      [theme.breakpoints.up(\"md\")]: {\r\n        display: \"none\"\r\n      }\r\n    }\r\n  }))\r\n  const userRoleId = user && user.role_id\r\n  const classes = useStyles()\r\n  const [anchorEl, setAnchorEl] = useState(null)\r\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = useState(null)\r\n  const menuId = \"primary-search-account-menu\"\r\n  const isMenuOpen = Boolean(anchorEl)\r\n  const handleProfileMenuOpen = event => {\r\n    setAnchorEl(event.currentTarget)\r\n  }\r\n  const handleMenuClose = () => {\r\n    setAnchorEl(null)\r\n  }\r\n  const renderMenu = (\r\n    <Menu keepMounted elevation={1} anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }} transformOrigin={{ vertical: \"top\", horizontal: \"right\" }} anchorEl={anchorEl} id={menuId} open={isMenuOpen} onClose={handleMenuClose}>\r\n      {userRoleId === 1 && (\r\n        <div>\r\n          <MenuItem className=\"text-black\" component={Link} to=\"/engineers/profile\">\r\n            Profile\r\n          </MenuItem>\r\n          <MenuItem className=\"text-black\" component={Link} to=\"/engineers/profile/me/edit\">\r\n            Edit Profile\r\n          </MenuItem>\r\n        </div>\r\n      )}\r\n      {userRoleId === 2 && (\r\n        <div>\r\n          <MenuItem className=\"text-black\" component={Link} to=\"/companies/profile\">\r\n            Profile\r\n          </MenuItem>\r\n          <MenuItem className=\"text-black\" component={Link} to=\"/companies/profile/me/edit\">\r\n            Edit Profile\r\n          </MenuItem>\r\n        </div>\r\n      )}\r\n      <MenuItem onClick={logoutUser}>Logout</MenuItem>\r\n    </Menu>\r\n  )\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      if (typeof userRoleId === \"undefined\") {\r\n        return false\r\n      } else {\r\n        if (userRoleId === 1) {\r\n          await getCurrentProfileEngineer()\r\n        }\r\n        if (userRoleId === 2) {\r\n          await getCurrentProfileCompany()\r\n        }\r\n      }\r\n    }\r\n    fetchData()\r\n  }, [getCurrentProfileEngineer, getCurrentProfileCompany, userRoleId])\r\n  const authLinks = (\r\n    <div className={classes.grow}>\r\n      <AppBar elevation={1} color=\"transparent\" position=\"static\">\r\n        <Toolbar>\r\n          <div className={classes.grow}>\r\n            <img className=\"logo\" src=\"./images/logo.png\" alt=\"My Logo\" />\r\n          </div>\r\n          {location.pathname === \"/engineers\" && (\r\n            <div className={classes.search}>\r\n              <div className={classes.searchIcon}>\r\n                <SearchIcon />\r\n              </div>\r\n              <InputBase\r\n                placeholder=\"Search name here...\"\r\n                inputProps={{ \"aria-label\": \"search\" }}\r\n                classes={{\r\n                  root: classes.inputRoot,\r\n                  input: classes.inputInput\r\n                }}\r\n                onChange={event => handleSearchEngineer(event.target.value)}\r\n              />\r\n            </div>\r\n          )}\r\n          {location.pathname === \"/companies\" && (\r\n            <div className={classes.search}>\r\n              <div className={classes.searchIcon}>\r\n                <SearchIcon />\r\n              </div>\r\n              <InputBase\r\n                placeholder=\"Search name here...\"\r\n                inputProps={{ \"aria-label\": \"search\" }}\r\n                classes={{\r\n                  root: classes.inputRoot,\r\n                  input: classes.inputInput\r\n                }}\r\n                onChange={event => handleSearchCompany(event.target.value)}\r\n              />\r\n            </div>\r\n          )}\r\n          <div className={classes.grow}>\r\n            <Link className=\"text-black mx-3\" to=\"/\">\r\n              Home\r\n            </Link>\r\n            <Link className=\"text-black mx-3\" to=\"/engineers\">\r\n              Engineers\r\n            </Link>\r\n            <Link className=\"text-black mx-3\" to=\"/companies\">\r\n              Companies\r\n            </Link>\r\n          </div>\r\n          <div className={classes.grow}>\r\n            {userRoleId === 1 && (\r\n              <span className=\"mx-3 cursor-pointer\" onClick={handleProfileMenuOpen}>\r\n                Hello, {engineer && engineer.fullname}\r\n              </span>\r\n            )}\r\n            {userRoleId === 2 && (\r\n              <span className=\"mx-3 cursor-pointer\" onClick={handleProfileMenuOpen}>\r\n                {company && company.data && company.data.name}\r\n              </span>\r\n            )}\r\n            <IconButton edge=\"end\" aria-label=\"account of current user\" aria-haspopup=\"true\" color=\"inherit\" aria-controls={menuId} onClick={handleProfileMenuOpen}>\r\n              {userRoleId === 1 && <AvatarComponent imageSource={engineer && engineer.avatar} altName={engineer && engineer.nickname} type=\"engineers\" width=\"30\" height=\"30\" />}\r\n              {userRoleId === 2 && <AvatarComponent imageSource={company && company.data && company.data.logo} altName={company && company.data && company.data.name} type=\"companies\" width=\"30\" height=\"30\" />}\r\n            </IconButton>\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n      {renderMenu}\r\n    </div>\r\n  )\r\n  const guestLinks = (\r\n    <div className={classes.grow}>\r\n      <AppBar elevation={1} color=\"transparent\" position=\"static\">\r\n        <Toolbar>\r\n          <div className={classes.grow}>\r\n            <img className=\"logo\" src=\"./images/logo.png\" alt=\"My Logo\" />\r\n          </div>\r\n          {location.pathname === \"/engineers\" && (\r\n            <div className={classes.search}>\r\n              <div className={classes.searchIcon}>\r\n                <SearchIcon />\r\n              </div>\r\n              <InputBase\r\n                placeholder=\"Search name here...\"\r\n                inputProps={{ \"aria-label\": \"search\" }}\r\n                classes={{\r\n                  root: classes.inputRoot,\r\n                  input: classes.inputInput\r\n                }}\r\n                onChange={event => handleSearchEngineer(event.target.value)}\r\n              />\r\n            </div>\r\n          )}\r\n          {location.pathname === \"/companies\" && (\r\n            <div className={classes.search}>\r\n              <div className={classes.searchIcon}>\r\n                <SearchIcon />\r\n              </div>\r\n              <InputBase\r\n                placeholder=\"Search name or location here...\"\r\n                inputProps={{ \"aria-label\": \"search\" }}\r\n                classes={{\r\n                  root: classes.inputRoot,\r\n                  input: classes.inputInput\r\n                }}\r\n                onChange={event => handleSearchCompany(event.target.value)}\r\n              />\r\n            </div>\r\n          )}\r\n          <div className={classes.grow}>\r\n            <Link className=\"text-black mx-3\" to=\"/\">\r\n              Home\r\n            </Link>\r\n            <Link className=\"text-black mx-3\" to=\"/engineers\">\r\n              Engineers\r\n            </Link>\r\n            <Link className=\"text-black mx-3\" to=\"/companies\">\r\n              Companies\r\n            </Link>\r\n            <Link className=\"text-black mx-3\" to=\"/login\">\r\n              Login\r\n            </Link>\r\n            <Link className=\"text-black mx-3\" to=\"/register\">\r\n              Register\r\n            </Link>\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n      {renderMenu}\r\n    </div>\r\n  )\r\n  return <>{isAuthenticated ? authLinks : guestLinks}</>\r\n}\r\nconst mapStateToProps = state => ({\r\n  engineer: state.engineer.engineer,\r\n  company: state.company.company,\r\n  isAuthenticated: state.auth.isAuthenticated,\r\n  user: state.auth.user\r\n})\r\nexport default connect(mapStateToProps, { getCurrentProfileEngineer, getCurrentProfileCompany, logout })(withRouter(Header))\r\n","D:\\reihan-agam\\react-js\\hiring-channel\\src\\reducers\\alert.js",["216"],"import { SET_ALERT, REMOVE_ALERT } from \"../actions/types\"\r\nconst initialState = []\r\nexport default function (state = initialState, action) {\r\n  const { type, payload } = action\r\n  switch (type) {\r\n    case SET_ALERT:\r\n      return [payload, ...state]\r\n    case REMOVE_ALERT:\r\n      return state.filter(alert => alert.id !== payload)\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","D:\\reihan-agam\\react-js\\hiring-channel\\src\\reducers\\auth.js",["217"],"import { REGISTER_SUCCESS, REGISTER_FAIL, LOGIN_SUCCESS, LOGIN_FAIL, LOGOUT, AUTH_ERROR, USER_LOADED } from \"../actions/types\"\r\nconst initialState = {\r\n  token: localStorage.getItem(\"token\"),\r\n  isAuthenticated: {},\r\n  user: {},\r\n  loading: true\r\n}\r\nexport default function (state = initialState, action) {\r\n  const { type, payload } = action\r\n  switch (type) {\r\n    case USER_LOADED:\r\n      return {\r\n        ...state,\r\n        isAuthenticated: true,\r\n        loading: false,\r\n        user: payload\r\n      }\r\n    case REGISTER_SUCCESS:\r\n    case LOGIN_SUCCESS:\r\n      localStorage.setItem(\"token\", payload.token)\r\n      return {\r\n        ...state,\r\n        ...payload,\r\n        isAuthenticated: true,\r\n        loading: false\r\n      }\r\n    case REGISTER_FAIL:\r\n    case AUTH_ERROR:\r\n    case LOGIN_FAIL:\r\n    case LOGOUT:\r\n      localStorage.removeItem(\"token\")\r\n      return {\r\n        ...state,\r\n        token: null,\r\n        isAuthenticated: false,\r\n        loading: false,\r\n        user: {}\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","D:\\reihan-agam\\react-js\\hiring-channel\\src\\reducers\\engineer.js",["218"],"import { LOADING, LOADED, GET_ENGINEERS, GET_ENGINEERS_ERROR, GET_SKILLS, GET_SKILLS_ERROR, GET_CURRENT_PROFILE_ENGINEER, GET_CURRENT_PROFILE_ENGINEER_ERROR, GET_PROFILE_ENGINEER_BY_SLUG, GET_PROFILE_ENGINEER_BY_SLUG_ERROR, UPDATE_PROFILE_ENGINEER, UPDATE_PROFILE_ENGINEER_ERROR, DELETE_ENGINEER, DELETE_ENGINEER_ERROR } from \"../actions/types\"\r\nconst initialState = {\r\n  engineers: [],\r\n  engineer: {},\r\n  skills: [],\r\n  error: {},\r\n  loading: true,\r\n  search: \"\",\r\n  sort: \"DESC\",\r\n  sortBy: \"updated_at\",\r\n  limit: \"10\",\r\n  page: \"1\"\r\n}\r\nexport default (state = initialState, action) => {\r\n  const { type, payload } = action\r\n  switch (type) {\r\n    case LOADING:\r\n      return {\r\n        ...state,\r\n        loading: true\r\n      }\r\n    case LOADED:\r\n      return {\r\n        ...state,\r\n        loading: false\r\n      }\r\n    case GET_SKILLS:\r\n      return {\r\n        ...state,\r\n        skills: payload\r\n      }\r\n    case GET_SKILLS_ERROR:\r\n      return {\r\n        ...state,\r\n        error: payload\r\n      }\r\n    case GET_ENGINEERS:\r\n      return {\r\n        ...state,\r\n        engineers: payload\r\n      }\r\n    case GET_ENGINEERS_ERROR:\r\n      return {\r\n        ...state,\r\n        error: payload\r\n      }\r\n    case GET_CURRENT_PROFILE_ENGINEER:\r\n      return {\r\n        ...state,\r\n        engineer: payload\r\n      }\r\n    case GET_CURRENT_PROFILE_ENGINEER_ERROR:\r\n      return {\r\n        ...state,\r\n        error: payload\r\n      }\r\n    case GET_PROFILE_ENGINEER_BY_SLUG:\r\n      return {\r\n        ...state,\r\n        engineer: payload\r\n      }\r\n    case GET_PROFILE_ENGINEER_BY_SLUG_ERROR:\r\n      return {\r\n        ...state,\r\n        error: payload\r\n      }\r\n    case UPDATE_PROFILE_ENGINEER:\r\n      return {\r\n        ...state,\r\n        engineers: [...payload, state.engineers]\r\n      }\r\n    case UPDATE_PROFILE_ENGINEER_ERROR:\r\n      return {\r\n        ...state,\r\n        error: payload\r\n      }\r\n    case DELETE_ENGINEER:\r\n      return {\r\n        ...state,\r\n        engineers: state.engineers.filter(engineer => engineer.id !== payload)\r\n      }\r\n    case DELETE_ENGINEER_ERROR:\r\n      return {\r\n        ...state,\r\n        error: payload\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","D:\\reihan-agam\\react-js\\hiring-channel\\src\\reducers\\message.js",["219"],"import { GET_CONVERSATION_LISTS, GET_CONVERSATION_LISTS_ERROR, GET_REPLY_CONVERSATION_REPLIES, GET_REPLY_CONVERSATION_REPLIES_ERROR, CHECK_CONVERSATIONS, CHECK_CONVERSATIONS_ERROR, GET_USER_GUEST_UID, GET_USER_GUEST_UID_ERROR, GET_CONVERSATION_UID, GET_CONVERSATION_UID_ERROR, INSERT_INTO_CONVERSATIONS, INSERT_INTO_CONVERSATIONS_ERROR, INSERT_INTO_CONVERSATION_REPLIES, INSERT_INTO_CONVERSATION_REPLIES_ERROR, CHANGES_REPLY_TO_REALTIME } from \"../actions/types\"\r\nconst initialState = {\r\n  userGuestUid: null,\r\n  conversationUid: null,\r\n  checkConversations: null,\r\n  conversationLists: [],\r\n  replies: [],\r\n  error: {}\r\n}\r\nexport default function (state = initialState, action) {\r\n  const { type, payload } = action\r\n  switch (type) {\r\n    case GET_CONVERSATION_LISTS:\r\n      return {\r\n        ...state,\r\n        conversationLists: payload\r\n      }\r\n    case GET_CONVERSATION_LISTS_ERROR:\r\n      return {\r\n        ...state,\r\n        error: payload\r\n      }\r\n    case GET_REPLY_CONVERSATION_REPLIES:\r\n      return {\r\n        ...state,\r\n        replies: payload\r\n      }\r\n    case GET_REPLY_CONVERSATION_REPLIES_ERROR:\r\n      return {\r\n        ...state,\r\n        error: payload\r\n      }\r\n    case GET_USER_GUEST_UID:\r\n      return {\r\n        ...state,\r\n        userGuestUid: payload\r\n      }\r\n    case GET_USER_GUEST_UID_ERROR:\r\n      return {\r\n        ...state,\r\n        error: payload\r\n      }\r\n    case CHECK_CONVERSATIONS:\r\n      return {\r\n        ...state,\r\n        checkConversations: payload\r\n      }\r\n    case CHECK_CONVERSATIONS_ERROR:\r\n      return {\r\n        ...state,\r\n        error: payload\r\n      }\r\n    case GET_CONVERSATION_UID:\r\n      return {\r\n        ...state,\r\n        conversationUid: payload\r\n      }\r\n    case GET_CONVERSATION_UID_ERROR:\r\n      return {\r\n        ...state,\r\n        error: payload\r\n      }\r\n    case INSERT_INTO_CONVERSATIONS:\r\n      return {\r\n        ...state\r\n      }\r\n    case INSERT_INTO_CONVERSATIONS_ERROR:\r\n      return {\r\n        ...state,\r\n        error: payload\r\n      }\r\n    case CHANGES_REPLY_TO_REALTIME:\r\n      return {\r\n        ...state,\r\n        replies: state.replies.concat(payload[0].payload)\r\n      }\r\n    case INSERT_INTO_CONVERSATION_REPLIES:\r\n      return {\r\n        ...state\r\n      }\r\n    case INSERT_INTO_CONVERSATION_REPLIES_ERROR:\r\n      return {\r\n        ...state,\r\n        error: payload\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","D:\\reihan-agam\\react-js\\hiring-channel\\src\\reducers\\company.js",["220"],"import { LOADING, LOADED, GET_COMPANIES, GET_COMPANIES_ERROR, GET_CURRENT_PROFILE_COMPANY, GET_CURRENT_PROFILE_COMPANY_ERROR, GET_PROFILE_COMPANY_BY_SLUG, GET_PROFILE_COMPANY_BY_SLUG_ERROR, UPDATE_PROFILE_COMPANY, UPDATE_PROFILE_COMPANY_ERROR, DELETE_COMPANY, DELETE_COMPANY_ERROR } from \"../actions/types\"\r\nconst initialState = {\r\n  companies: [],\r\n  company: {},\r\n  error: {},\r\n  loading: true,\r\n  search: \"\",\r\n  sort: \"DESC\",\r\n  sortBy: \"updated_at\",\r\n  limit: \"10\",\r\n  page: \"1\"\r\n}\r\nexport default function (state = initialState, action) {\r\n  const { type, payload } = action\r\n  switch (type) {\r\n    case LOADING:\r\n      return {\r\n        ...state,\r\n        loading: true\r\n      }\r\n    case LOADED:\r\n      return {\r\n        ...state,\r\n        loading: false\r\n      }\r\n    case GET_COMPANIES:\r\n      return {\r\n        ...state,\r\n        companies: payload\r\n      }\r\n    case GET_COMPANIES_ERROR:\r\n      return {\r\n        ...state,\r\n        error: payload\r\n      }\r\n    case GET_CURRENT_PROFILE_COMPANY:\r\n      return {\r\n        ...state,\r\n        company: payload\r\n      }\r\n    case GET_CURRENT_PROFILE_COMPANY_ERROR:\r\n      return {\r\n        ...state,\r\n        error: payload\r\n      }\r\n    case GET_PROFILE_COMPANY_BY_SLUG:\r\n      return {\r\n        ...state,\r\n        company: payload\r\n      }\r\n    case GET_PROFILE_COMPANY_BY_SLUG_ERROR:\r\n      return {\r\n        ...state,\r\n        error: payload\r\n      }\r\n    case UPDATE_PROFILE_COMPANY:\r\n      return {\r\n        ...state,\r\n        companies: state.companies.concat(payload)\r\n      }\r\n    case UPDATE_PROFILE_COMPANY_ERROR:\r\n      return {\r\n        ...state,\r\n        error: payload\r\n      }\r\n    case DELETE_COMPANY:\r\n      return {\r\n        ...state,\r\n        companies: state.companies.filter(company => company.id !== payload)\r\n      }\r\n    case DELETE_COMPANY_ERROR:\r\n      return {\r\n        ...state,\r\n        error: payload\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","D:\\reihan-agam\\react-js\\hiring-channel\\src\\components\\route\\private\\index.js",[],"D:\\reihan-agam\\react-js\\hiring-channel\\src\\actions\\company.js",[],"D:\\reihan-agam\\react-js\\hiring-channel\\src\\actions\\engineer.js",["221","222"],"import axios from \"axios\"\r\nimport store from \"../store.js\"\r\nimport { decodeJWT } from \"../configs/helper\"\r\nimport { logout } from \"./auth\"\r\nimport { LOADING, LOADED, GET_SKILLS, GET_SKILLS_ERROR, GET_ENGINEERS, GET_ENGINEERS_ERROR, GET_CURRENT_PROFILE_ENGINEER, GET_CURRENT_PROFILE_ENGINEER_ERROR, GET_PROFILE_ENGINEER_BY_SLUG, GET_PROFILE_ENGINEER_BY_SLUG_ERROR, UPDATE_PROFILE_ENGINEER, UPDATE_PROFILE_ENGINEER_ERROR } from \"./types\"\r\nexport const getEngineers = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: LOADING\r\n    })\r\n    const response = await axios.get(`${process.env.REACT_APP_GET_LOCAL_ENGINEERS}/${getState().router.location.search}`)\r\n    dispatch({\r\n      type: LOADED\r\n    })\r\n    dispatch({\r\n      type: GET_ENGINEERS,\r\n      payload: response.data\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: GET_ENGINEERS_ERROR,\r\n      payload: error\r\n    })\r\n  }\r\n}\r\nexport const getSkills = () => async dispatch => {\r\n  try {\r\n    const response = await axios.get(`${process.env.REACT_APP_GET_LOCAL_ENGINEERS_SKILLS}`)\r\n    dispatch({\r\n      type: GET_SKILLS,\r\n      payload: response.data.data\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: GET_SKILLS_ERROR,\r\n      payload: error\r\n    })\r\n  }\r\n}\r\nexport const getCurrentProfileEngineer = () => async dispatch => {\r\n  let userUid, data\r\n  const token = localStorage.token\r\n  if (token) {\r\n    data = decodeJWT(token)\r\n    userUid = data.user.uid\r\n  }\r\n  try {\r\n    dispatch({\r\n      type: LOADING\r\n    })\r\n    const response = await axios.post(`${process.env.REACT_APP_GET_LOCAL_ENGINEERS}/profile`, { userUid })\r\n    dispatch({\r\n      type: LOADED\r\n    })\r\n    dispatch({\r\n      type: GET_CURRENT_PROFILE_ENGINEER,\r\n      payload: response.data.data\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: GET_CURRENT_PROFILE_ENGINEER_ERROR,\r\n      payload: error\r\n    })\r\n  }\r\n}\r\nexport const getProfileEngineerBySlug = slug => async dispatch => {\r\n  try {\r\n    dispatch({\r\n      type: LOADING\r\n    })\r\n    const response = await axios.get(`${process.env.REACT_APP_GET_LOCAL_ENGINEERS}/profile/${slug}`)\r\n    dispatch({\r\n      type: LOADED\r\n    })\r\n    dispatch({\r\n      type: GET_PROFILE_ENGINEER_BY_SLUG,\r\n      payload: response.data.data\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: GET_PROFILE_ENGINEER_BY_SLUG_ERROR,\r\n      payload: error\r\n    })\r\n  }\r\n}\r\nexport const updateProfileEngineer = payload => async dispatch => {\r\n  try {\r\n    const response = await axios.put(`${process.env.REACT_APP_GET_LOCAL_ENGINEERS}`, payload)\r\n    dispatch({\r\n      type: UPDATE_PROFILE_ENGINEER,\r\n      payload: payload\r\n    })\r\n    return response\r\n  } catch (error) {\r\n    dispatch({\r\n      type: UPDATE_PROFILE_ENGINEER_ERROR,\r\n      payload: error\r\n    })\r\n  }\r\n}\r\n// export const deleteProfileEngineer = (engineer_id, user_id) => async dispatch => {\r\n//   store.dispatch(logout())\r\n//   try {\r\n//     await axios.delete(`${process.env.REACT_APP_GET_LOCAL_ENGINEERS}/${engineer_id}/${user_id}`)\r\n//     dispatch({\r\n//       type: DELETE_ENGINEER,\r\n//       payload: engineer_id\r\n//     })\r\n//   } catch (error) {\r\n//     dispatch({\r\n//       type: DELETE_ENGINEER_ERROR,\r\n//       payload: error\r\n//     })\r\n//   }\r\n// }\r\n","D:\\reihan-agam\\react-js\\hiring-channel\\src\\components\\avatar\\avatar.js",[],"D:\\reihan-agam\\react-js\\hiring-channel\\src\\components\\layouts\\notfound.js",[],"D:\\reihan-agam\\react-js\\hiring-channel\\src\\components\\engineer\\engineerprofile\\profileedit\\index.js",[],"D:\\reihan-agam\\react-js\\hiring-channel\\src\\components\\auth\\login.js",["223","224","225","226"],"import React, { useState } from \"react\"\r\nimport { Link, Redirect } from \"react-router-dom\"\r\nimport { Button, InputLabel, FormControl, TextField, MenuItem, Select, Typography } from \"@material-ui/core\"\r\nimport { connect } from \"react-redux\"\r\nimport { login } from \"../../actions/auth\"\r\nconst Login = ({ login, isAuthenticated }) => {\r\n  const [formData, setFormData] = useState({\r\n    email: \"\",\r\n    password: \"\"\r\n  })\r\n  const { email, password } = formData\r\n  const onChange = event => setFormData({ ...formData, [event.target.name]: event.target.value })\r\n  const onSubmit = event => {\r\n    event.preventDefault()\r\n    login(email, password)\r\n  }\r\n  if (isAuthenticated) {\r\n    return <Redirect to=\"/\" />\r\n  }\r\n  return (\r\n    <>\r\n      <div className=\"columns justify-center min-h-screen\">\r\n        <div className=\"column marginless\" id=\"cover-background-login\">\r\n          <div id=\"cover-login\"></div>\r\n          <h2 className=\"title mx-2 text-white\">Hire expert freelancers for any job, online</h2>\r\n          <h3 className=\"sub-title mx-2 text-white\">Millions of small businesses use Frelancer to turn their ideas into reality.</h3>\r\n        </div>\r\n        <div className=\"column\">\r\n          <Typography variant=\"h5\" component=\"h5\" gutterBottom>\r\n            Login\r\n          </Typography>\r\n          <form onSubmit={event => onSubmit(event)}>\r\n            <TextField onChange={event => onChange(event)} value={email ?? \"\"} name=\"email\" margin=\"normal\" variant=\"outlined\" label=\"Email\" fullWidth />\r\n            <TextField onChange={event => onChange(event)} value={password ?? \"\"} name=\"password\" margin=\"normal\" variant=\"outlined\" label=\"Password\" fullWidth />\r\n            <div className=\"margin-normal\">\r\n              <Button style={{ margin: 0 }} type=\"submit\" variant=\"contained\" color=\"primary\" fullWidth>\r\n                Login\r\n              </Button>\r\n            </div>\r\n            <div className=\"margin-normal\">\r\n              <Button style={{ margin: 0 }} type=\"button\" variant=\"contained\" color=\"primary\" component={Link} to=\"/\" fullWidth>\r\n                Back\r\n              </Button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: state.auth.isAuthenticated\r\n})\r\nexport default connect(mapStateToProps, { login })(Login)\r\n","D:\\reihan-agam\\react-js\\hiring-channel\\src\\components\\auth\\register.js",["227","228","229"],"import React, { Fragment, useState } from \"react\"\r\nimport { Link, Redirect } from \"react-router-dom\"\r\nimport { createStyles, makeStyles } from \"@material-ui/core/styles\"\r\nimport { Button, InputLabel, FormControl, TextField, MenuItem, Select, Typography } from \"@material-ui/core\"\r\nimport { connect } from \"react-redux\"\r\nimport { register } from \"../../actions/auth\"\r\nimport \"react-dropdown/style.css\"\r\nimport Dropdown from \"react-dropdown\"\r\n\r\nconst Register = ({ register, isAuthenticated, history }) => {\r\n  const useStyles = makeStyles(theme =>\r\n    createStyles({\r\n      selectEmpty: {\r\n        marginTop: theme.spacing(2)\r\n      }\r\n    })\r\n  )\r\n  const classes = useStyles()\r\n  const [formData, setFormData] = useState({\r\n    fullname: \"\",\r\n    nickname: \"\",\r\n    email: \"\",\r\n    password: \"\"\r\n  })\r\n  const [role, setRole] = useState()\r\n  const { fullname, nickname, email, password } = formData\r\n  const onChange = event => setFormData({ ...formData, [event.target.name]: event.target.value })\r\n  const onChangeRole = element => {\r\n    setRole(element.target.value)\r\n    // setRole({ value: element.value, label: element.label }, { role: element.value })\r\n  }\r\n  const onSubmit = event => {\r\n    event.preventDefault()\r\n    register(fullname, nickname, email, password, role, history)\r\n  }\r\n  const optionsRole = [\r\n    { value: 1, label: \"Engineer\" },\r\n    { value: 2, label: \"Company\" }\r\n  ]\r\n  if (isAuthenticated) {\r\n    return <Redirect to=\"/\" />\r\n  }\r\n  return (\r\n    <Fragment>\r\n      <div className=\"columns justify-center min-h-screen\">\r\n        <div className=\"column marginless\" id=\"cover-background-register\">\r\n          <div id=\"cover-register\"></div>\r\n          <h2 className=\"title mx-3 text-white\">Hire expert freelancers for any job, online</h2>\r\n          <h3 className=\"sub-title mx-3 text-white\">Millions of small businesses use Frelancer to turn their ideas into reality.</h3>\r\n        </div>\r\n        <div className=\"column\">\r\n          <Typography variant=\"h5\" component=\"h5\" gutterBottom>\r\n            Register\r\n          </Typography>\r\n          <form onSubmit={event => onSubmit(event)}>\r\n            <TextField onChange={onChange} value={fullname ?? \"\"} name=\"fullname\" margin=\"normal\" variant=\"outlined\" label=\"Fullname\" fullWidth />\r\n            <TextField onChange={onChange} value={nickname ?? \"\"} name=\"nickname\" margin=\"normal\" variant=\"outlined\" label=\"Nickname\" fullWidth />\r\n            <TextField onChange={onChange} value={email ?? \"\"} name=\"email\" margin=\"normal\" variant=\"outlined\" label=\"Email\" fullWidth />\r\n            <TextField onChange={onChange} value={password ?? \"\"} name=\"password\" margin=\"normal\" variant=\"outlined\" label=\"Password\" fullWidth />\r\n            <FormControl margin=\"normal\" variant=\"outlined\" fullWidth>\r\n              <InputLabel htmlFor=\"outlined-role\">Select your Role</InputLabel>\r\n              <Select\r\n                inputProps={{\r\n                  name: \"role\",\r\n                  id: \"outlined-role\"\r\n                }}\r\n                value={role}\r\n                label=\"Select your Role\"\r\n                onChange={event => onChangeRole(event)}\r\n              >\r\n                <MenuItem value={1}>Engineer</MenuItem>\r\n                <MenuItem value={2}>Company</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n            {/* <Dropdown options={optionsRole} value={role} placeholder=\"Select your Role\" onChange={event => onChangeRole(event)} /> */}\r\n            <div className=\"margin-normal\">\r\n              <Button style={{ margin: 0 }} type=\"submit\" variant=\"contained\" color=\"primary\" fullWidth>\r\n                Register\r\n              </Button>\r\n            </div>\r\n            <div className=\"margin-normal\">\r\n              <Button style={{ margin: 0 }} type=\"button\" variant=\"contained\" color=\"primary\" component={Link} to=\"/\" fullWidth>\r\n                Back\r\n              </Button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: state.auth.isAuthenticated\r\n})\r\nexport default connect(mapStateToProps, { register })(Register)\r\n","D:\\reihan-agam\\react-js\\hiring-channel\\src\\components\\company\\index.js",[],"D:\\reihan-agam\\react-js\\hiring-channel\\src\\components\\company\\companyprofile\\index.js",[],"D:\\reihan-agam\\react-js\\hiring-channel\\src\\components\\company\\companyprofile\\profileedit\\index.js",["230","231","232","233","234"],"import React, { useState, useEffect } from \"react\"\r\nimport { Link, withRouter } from \"react-router-dom\"\r\nimport Swal from \"sweetalert2\"\r\nimport { Container, Grid, Button, TextField, Avatar, Badge, makeStyles } from \"@material-ui/core\"\r\nimport CreateOutlinedIcon from \"@material-ui/icons/CreateOutlined\"\r\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from \"@material-ui/pickers\"\r\nimport \"date-fns\"\r\nimport MaskedInput from \"react-text-mask\"\r\nimport NumberFormat from \"react-number-format\"\r\nimport DateFnsUtils from \"@date-io/date-fns\"\r\nimport * as moment from \"moment\"\r\nimport { connect } from \"react-redux\"\r\nimport { getCurrentProfileCompany, updateProfileCompany } from \"../../../../actions/company\"\r\nimport Spinner from \"../../../spinner\"\r\nconst ProfileEdit = ({ getCurrentProfileCompany, updateProfileCompany, company: { company, loading }, auth: { user }, history }) => {\r\n  const Toast = Swal.mixin({\r\n    position: \"top-end\",\r\n    toast: true,\r\n    timer: 3000,\r\n    showConfirmButton: false,\r\n    timerProgressBar: false,\r\n    onOpen: toast => {\r\n      toast.addEventListener(\"mouseenter\", Swal.stopTimer)\r\n      toast.addEventListener(\"mouseleave\", Swal.resumeTimer)\r\n    }\r\n  })\r\n  let idProps = company.data && company.data.id\r\n  let logoProps = company.data && company.data.logo\r\n  let nameProps = company.data && company.data.name\r\n  let emailProps = company.data && company.data.email\r\n  let locationProps = company.data && company.data.location\r\n  let descriptionProps = company.data && company.data.description\r\n  let telephoneProps = company.data && company.data.telephone\r\n  let user_id = user.data && user.data.id\r\n  const [formData, setFormData] = useState({\r\n    id: \"\",\r\n    name: \"\",\r\n    email: \"\",\r\n    description: \"\",\r\n    telephone: \"\",\r\n    location: \"\"\r\n  })\r\n  const useStyles = makeStyles(theme => ({\r\n    root: {\r\n      display: \"flex\",\r\n      justifyContent: \"center\",\r\n      alignItems: \"center\",\r\n      \"& > *\": {\r\n        margin: theme.spacing(1)\r\n      }\r\n    },\r\n    small: {\r\n      width: theme.spacing(3),\r\n      height: theme.spacing(3)\r\n    },\r\n    large: {\r\n      width: theme.spacing(10),\r\n      height: theme.spacing(10)\r\n    }\r\n  }))\r\n  const classes = useStyles()\r\n  const [logoNotEdited, setLogoNotEdited] = useState(\"\")\r\n  const [logoDefault, setDefaultLogo] = useState(\"\")\r\n  const [logoFile, setLogoFile] = useState(\"\")\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      await getCurrentProfileCompany()\r\n    }\r\n    fetchData()\r\n    setFormData({\r\n      id: idProps,\r\n      name: nameProps,\r\n      email: emailProps,\r\n      description: descriptionProps,\r\n      telephone: telephoneProps,\r\n      location: locationProps\r\n    })\r\n    setDefaultLogo(`http://localhost:5000/images/company/${logoProps}`)\r\n    setLogoNotEdited(`${logoProps}`)\r\n  }, [getCurrentProfileCompany, idProps, logoProps, nameProps, emailProps, descriptionProps, telephoneProps, locationProps])\r\n  const { id, name, email, description, telephone, location } = formData\r\n  const onChange = event => {\r\n    setFormData({ ...formData, [event.target.name]: event.target.value })\r\n  }\r\n  let getFile\r\n  const handleFile = event => {\r\n    getFile.click()\r\n  }\r\n  const handleLogo = event => {\r\n    if (event.target.files && event.target.files[0]) {\r\n      let error = false\r\n      let size = event.target.files[0].size\r\n      let extension = event.target.files[0].name.split(\".\")[1]\r\n      let reader = new FileReader()\r\n      try {\r\n        if (size > 1024000) {\r\n          error = true\r\n          throw new Error(\"File size cannot larger than 1MB.\")\r\n        }\r\n        if (!isImage(extension)) {\r\n          error = true\r\n          throw new Error(\"File type allowed: PNG, JPG, JPEG, GIF, SVG, BMP.\")\r\n        }\r\n        if (error === false) {\r\n          setLogoFile(event.target.files[0])\r\n          reader.onload = e => {\r\n            setDefaultLogo(e.target.result)\r\n          }\r\n          reader.readAsDataURL(event.target.files[0])\r\n        }\r\n      } catch (error) {\r\n        Toast.fire({\r\n          icon: \"error\",\r\n          title: error.message\r\n        })\r\n      }\r\n    }\r\n  }\r\n  const isImage = extension => {\r\n    switch (extension) {\r\n      case \"png\":\r\n      case \"jpg\":\r\n      case \"jpeg\":\r\n      case \"gif\":\r\n      case \"svg\":\r\n      case \"bmp\":\r\n        return true\r\n      default:\r\n    }\r\n    return false\r\n  }\r\n  const onSubmit = event => {\r\n    event.preventDefault()\r\n    let logo\r\n    if (logoFile === \"\") {\r\n      logo = logoNotEdited\r\n    } else {\r\n      logo = logoFile\r\n    }\r\n    try {\r\n      if (name.length < 3) {\r\n        throw new Error(\"Name Minimum 3 Character.\")\r\n      }\r\n      if (description.length < 200) {\r\n        throw new Error(\"Description Minimum 200 Character.\")\r\n      }\r\n      let data = new FormData()\r\n      data.set(\"user_id\", user_id)\r\n      data.set(\"logo\", logo)\r\n      data.set(\"name\", name ? name : \"\")\r\n      data.set(\"email\", email ? email : \"\")\r\n      data.set(\"description\", description ? description : \"\")\r\n      data.set(\"telephone\", telephone ? telephone : \"\")\r\n      data.set(\"location\", location ? location : \"\")\r\n      const company_id = id\r\n      updateProfileCompany(company_id, data)\r\n      setTimeout(() => {\r\n        history.push(\"/companies\")\r\n        Toast.fire({\r\n          icon: \"success\",\r\n          title: \"Yay ! Profile Updated.\"\r\n        })\r\n      }, 1000)\r\n    } catch (error) {\r\n      Toast.fire({\r\n        icon: \"error\",\r\n        title: error.message\r\n      })\r\n    }\r\n  }\r\n  return loading ? (\r\n    <Spinner />\r\n  ) : (\r\n    <>\r\n      <div className=\"backdrop-bottom\"></div>\r\n      <Container fixed>\r\n        <Grid container className=\"my-5\" direction=\"row\" justify=\"center\" alignItems=\"center\">\r\n          <Grid className=\"p-5 white rounded\" item md={8} xs={12}>\r\n            <form onSubmit={event => onSubmit(event)}>\r\n              <div className={classes.root}>\r\n                <Badge\r\n                  overlap=\"circle\"\r\n                  anchorOrigin={{\r\n                    vertical: \"bottom\",\r\n                    horizontal: \"right\"\r\n                  }}\r\n                  badgeContent={\r\n                    <Grid\r\n                      item\r\n                      className=\"p-1 rounded\"\r\n                      style={{\r\n                        backgroundColor: \"#ea80fc\"\r\n                      }}\r\n                    >\r\n                      <CreateOutlinedIcon\r\n                        onClick={handleFile}\r\n                        className=\"text-white\"\r\n                        style={{\r\n                          cursor: \"pointer\"\r\n                        }}\r\n                      />\r\n                      <input ref={input => (getFile = input)} onChange={handleLogo} style={{ display: \"none\" }} type=\"file\" />\r\n                    </Grid>\r\n                  }\r\n                >\r\n                  <Avatar className={classes.large} alt={name} src={`${logoDefault}`} />\r\n                </Badge>\r\n              </div>\r\n              <TextField onChange={onChange} value={name} name=\"name\" margin=\"normal\" variant=\"outlined\" label=\"Name\" fullWidth />\r\n              <TextField onChange={onChange} value={email} name=\"email\" margin=\"normal\" variant=\"outlined\" label=\"E-mail Address\" fullWidth disabled />\r\n              <TextField onChange={onChange} value={description} rows=\"4\" name=\"description\" margin=\"normal\" variant=\"outlined\" label=\"Description\" fullWidth multiline />\r\n              <TextField onChange={e => onChange(e)} value={location} name=\"location\" margin=\"normal\" variant=\"outlined\" label=\"Location\" fullWidth />\r\n              <MaskedInput\r\n                mask={[\"(\", /[1-9]/, /\\d/, /\\d/, \")\", \" \", /\\d/, /\\d/, /\\d/, /\\d/, \"-\", /\\d/, /\\d/, /\\d/, /\\d/]}\r\n                placeholderChar={\"_\"}\r\n                onChange={e => onChange(e)}\r\n                render={(ref, props) => {\r\n                  return <TextField value={telephone} name=\"telephone\" margin=\"normal\" variant=\"outlined\" fullWidth inputRef={ref} {...props} />\r\n                }}\r\n                showMask\r\n              />\r\n              <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\r\n                <Button type=\"button\" variant=\"contained\" color=\"primary\" component={Link} to=\"/companies\">\r\n                  Back\r\n                </Button>\r\n                <Button type=\"submit\" variant=\"contained\" color=\"primary\">\r\n                  Update Profile\r\n                </Button>\r\n              </Grid>\r\n            </form>\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    </>\r\n  )\r\n}\r\nconst mapStateToProps = state => ({\r\n  company: state.company,\r\n  auth: state.auth\r\n})\r\nexport default connect(mapStateToProps, { getCurrentProfileCompany, updateProfileCompany })(withRouter(ProfileEdit))\r\n","D:\\reihan-agam\\react-js\\hiring-channel\\src\\components\\company\\companyprofile\\profileshow\\index.js",["235","236"],"import React, { useEffect, Fragment } from \"react\"\r\nimport { connect } from \"react-redux\"\r\nimport { Link } from \"react-router-dom\"\r\nimport { Container, Grid, Paper, Button, Avatar, makeStyles } from \"@material-ui/core\"\r\nimport Spinner from \"../../../spinner\"\r\nimport defaultImage from \"../../../../images/default.png\"\r\nimport { getProfileCompanyBySlug, deleteProfileCompany } from \"../../../../actions/company\"\r\nconst Profile = ({ getProfileCompanyBySlug, deleteProfileCompany, company: { company, loading }, history, match }) => {\r\n  const useStyles = makeStyles(theme => ({\r\n    root: {\r\n      flexGrow: 1\r\n    },\r\n    paper: {\r\n      padding: theme.spacing(2)\r\n    },\r\n    avatar: {\r\n      width: theme.spacing(10),\r\n      height: theme.spacing(10),\r\n      marginBottom: \"20px\"\r\n    }\r\n  }))\r\n  const classes = useStyles()\r\n  let logo = company.logo\r\n  let name = company.name\r\n  let email = company.email\r\n  let description = company.description\r\n  let telephone = company.telephone\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      await getProfileCompanyBySlug(match.params.slug)\r\n    }\r\n    fetchData()\r\n  }, [getProfileCompanyBySlug, match.params.slug])\r\n  return loading ? (\r\n    <Spinner />\r\n  ) : (\r\n    <Fragment>\r\n      <div className=\"backdrop-top\"></div>\r\n      <Container className=\"mt-64\" Fixed>\r\n        <div className={classes.root}>\r\n          <Grid container spacing={8}>\r\n            <Grid item md={4} xs={12}>\r\n              <Paper className={classes.paper}>\r\n                <Avatar className={classes.avatar} src={`http://localhost:5000/images/company/${logo}`} alt={name} />\r\n                <p className=\"my-2\"> {name} </p>\r\n                <p className=\"my-2\"> {email} </p>\r\n                <p className=\"my-2\"> {telephone} </p>\r\n                <Button type=\"button\" variant=\"contained\" color=\"primary\" component={Link} to=\"/companies\">\r\n                  Back\r\n                </Button>\r\n              </Paper>\r\n            </Grid>\r\n            <Grid item md={4} xs={12}>\r\n              <Paper className={classes.paper}>\r\n                <p> {description} </p>\r\n              </Paper>\r\n            </Grid>\r\n          </Grid>\r\n        </div>\r\n      </Container>\r\n    </Fragment>\r\n  )\r\n}\r\nconst mapStateToProps = state => ({\r\n  company: state.company\r\n})\r\nexport default connect(mapStateToProps, { getProfileCompanyBySlug })(Profile)\r\n","D:\\reihan-agam\\react-js\\hiring-channel\\src\\components\\engineer\\engineerprofile\\index.js",[],"D:\\reihan-agam\\react-js\\hiring-channel\\src\\components\\engineer\\index.js",["237"],"D:\\reihan-agam\\react-js\\hiring-channel\\src\\configs\\helper.js",[],"D:\\reihan-agam\\react-js\\hiring-channel\\src\\components\\engineer\\engineerprofile\\profileshow\\index.js",[],"D:\\reihan-agam\\react-js\\hiring-channel\\src\\components\\engineer\\engineerprofile\\profileedit\\profileedititem\\profileedititem.js",[],"D:\\reihan-agam\\react-js\\hiring-channel\\src\\components\\layouts\\headerfilter.js",[],"D:\\reihan-agam\\react-js\\hiring-channel\\src\\components\\engineer\\engineerprofile\\profileshow\\profileshowitem\\profileshowitem.js",["238"],"D:\\reihan-agam\\react-js\\hiring-channel\\src\\actions\\message.js",[],"D:\\reihan-agam\\react-js\\hiring-channel\\src\\components\\spinner\\index.js",["239"],"import React from \"react\"\r\nexport default () => (\r\n  <div className=\"flex align-i-center justify-c-center min-h-screen\">\r\n    <div className=\"spinner spinner-loader\">\r\n      <span className=\"spinner-item-loader\"></span>\r\n      <span className=\"spinner-item-loader\"></span>\r\n      <span className=\"spinner-item-loader\"></span>\r\n    </div>\r\n  </div>\r\n)\r\n","D:\\reihan-agam\\react-js\\hiring-channel\\src\\components\\engineer\\engineerlist\\index.js",["240"],"import React from \"react\"\r\nimport EngineerItem from \"../engineeritem\"\r\nimport DataEmpty from \"../../layouts/dataempty\"\r\nconst EngineerList = ({ engineers, handlePage, currentPage, pageCount }) => (engineers.data && engineers.data.length == 0 ? <DataEmpty /> : <EngineerItem engineers={engineers.data} handlePage={handlePage} currentPage={currentPage} pageCount={pageCount} />)\r\nexport default EngineerList\r\n","D:\\reihan-agam\\react-js\\hiring-channel\\src\\components\\engineer\\engineerprofile\\profileskillsitem\\profileskillsitem.js",[],"D:\\reihan-agam\\react-js\\hiring-channel\\src\\components\\layouts\\dataempty.js",[],"D:\\reihan-agam\\react-js\\hiring-channel\\src\\components\\engineer\\engineerprofile\\profileshow\\messagelists\\index.js",[],"D:\\reihan-agam\\react-js\\hiring-channel\\src\\components\\engineer\\engineerprofile\\profileshow\\conversationlists\\index.js",[],"D:\\reihan-agam\\react-js\\hiring-channel\\src\\actions\\engineer-router.js",[],"D:\\reihan-agam\\react-js\\hiring-channel\\src\\actions\\company-router.js",[],"D:\\reihan-agam\\react-js\\hiring-channel\\src\\components\\engineer\\engineerprofile\\profileitem\\profileitem.js",[],"D:\\reihan-agam\\react-js\\hiring-channel\\src\\components\\engineer\\engineeritem\\index.js",[],"D:\\reihan-agam\\react-js\\hiring-channel\\src\\components\\company\\companylist\\index.js",[],"D:\\reihan-agam\\react-js\\hiring-channel\\src\\lib\\query-string\\index.js",[],{"ruleId":"241","replacedBy":"242"},{"ruleId":"243","replacedBy":"244"},{"ruleId":"245","severity":1,"message":"246","line":83,"column":10,"nodeType":"247","messageId":"248","endLine":83,"endColumn":28},{"ruleId":"245","severity":1,"message":"249","line":83,"column":30,"nodeType":"247","messageId":"248","endLine":83,"endColumn":51},{"ruleId":"250","severity":1,"message":"251","line":3,"column":1,"nodeType":"252","endLine":13,"endColumn":2},{"ruleId":"250","severity":1,"message":"251","line":8,"column":1,"nodeType":"252","endLine":42,"endColumn":2},{"ruleId":"250","severity":1,"message":"253","line":14,"column":1,"nodeType":"252","endLine":90,"endColumn":2},{"ruleId":"250","severity":1,"message":"251","line":10,"column":1,"nodeType":"252","endLine":89,"endColumn":2},{"ruleId":"250","severity":1,"message":"251","line":13,"column":1,"nodeType":"252","endLine":79,"endColumn":2},{"ruleId":"245","severity":1,"message":"254","line":2,"column":8,"nodeType":"247","messageId":"248","endLine":2,"endColumn":13},{"ruleId":"245","severity":1,"message":"255","line":4,"column":10,"nodeType":"247","messageId":"248","endLine":4,"endColumn":16},{"ruleId":"245","severity":1,"message":"256","line":3,"column":18,"nodeType":"247","messageId":"248","endLine":3,"endColumn":28},{"ruleId":"245","severity":1,"message":"257","line":3,"column":30,"nodeType":"247","messageId":"248","endLine":3,"endColumn":41},{"ruleId":"245","severity":1,"message":"258","line":3,"column":54,"nodeType":"247","messageId":"248","endLine":3,"endColumn":62},{"ruleId":"245","severity":1,"message":"259","line":3,"column":64,"nodeType":"247","messageId":"248","endLine":3,"endColumn":70},{"ruleId":"245","severity":1,"message":"260","line":8,"column":8,"nodeType":"247","messageId":"248","endLine":8,"endColumn":16},{"ruleId":"245","severity":1,"message":"261","line":18,"column":9,"nodeType":"247","messageId":"248","endLine":18,"endColumn":16},{"ruleId":"245","severity":1,"message":"262","line":36,"column":9,"nodeType":"247","messageId":"248","endLine":36,"endColumn":20},{"ruleId":"245","severity":1,"message":"263","line":6,"column":10,"nodeType":"247","messageId":"248","endLine":6,"endColumn":33},{"ruleId":"245","severity":1,"message":"264","line":6,"column":35,"nodeType":"247","messageId":"248","endLine":6,"endColumn":53},{"ruleId":"245","severity":1,"message":"265","line":9,"column":8,"nodeType":"247","messageId":"248","endLine":9,"endColumn":20},{"ruleId":"245","severity":1,"message":"266","line":10,"column":8,"nodeType":"247","messageId":"248","endLine":10,"endColumn":20},{"ruleId":"245","severity":1,"message":"267","line":11,"column":13,"nodeType":"247","messageId":"248","endLine":11,"endColumn":19},{"ruleId":"245","severity":1,"message":"268","line":6,"column":8,"nodeType":"247","messageId":"248","endLine":6,"endColumn":20},{"ruleId":"245","severity":1,"message":"269","line":7,"column":35,"nodeType":"247","messageId":"248","endLine":7,"endColumn":55},{"ruleId":"270","severity":1,"message":"271","line":28,"column":6,"nodeType":"272","endLine":28,"endColumn":67,"suggestions":"273"},{"ruleId":"245","severity":1,"message":"274","line":52,"column":9,"nodeType":"247","messageId":"248","endLine":52,"endColumn":20},{"ruleId":"250","severity":1,"message":"253","line":2,"column":1,"nodeType":"252","endLine":10,"endColumn":2},{"ruleId":"275","severity":1,"message":"276","line":4,"column":118,"nodeType":"277","messageId":"278","endLine":4,"endColumn":120},"no-native-reassign",["279"],"no-negated-in-lhs",["280"],"no-unused-vars","'mobileMoreAnchorEl' is assigned a value but never used.","Identifier","unusedVar","'setMobileMoreAnchorEl' is assigned a value but never used.","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","Assign arrow function to a variable before exporting as module default","'store' is defined but never used.","'logout' is defined but never used.","'InputLabel' is defined but never used.","'FormControl' is defined but never used.","'MenuItem' is defined but never used.","'Select' is defined but never used.","'Dropdown' is defined but never used.","'classes' is assigned a value but never used.","'optionsRole' is assigned a value but never used.","'MuiPickersUtilsProvider' is defined but never used.","'KeyboardDatePicker' is defined but never used.","'NumberFormat' is defined but never used.","'DateFnsUtils' is defined but never used.","'moment' is defined but never used.","'defaultImage' is defined but never used.","'deleteProfileCompany' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'sort' and 'sortBy'. Either include them or remove the dependency array.","ArrayExpression",["281"],"'StyledBadge' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation",{"desc":"282","fix":"283"},"Update the dependencies array to be: [getEngineers, gettingQueryUrl, changeQueryParam, page, show, sort, sortBy]",{"range":"284","text":"285"},[1123,1184],"[getEngineers, gettingQueryUrl, changeQueryParam, page, show, sort, sortBy]"]