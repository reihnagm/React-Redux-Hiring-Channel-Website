[{"D:\\reihan-agam\\react-js\\hiring-channel\\src\\index.js":"1","D:\\reihan-agam\\react-js\\hiring-channel\\src\\store.js":"2","D:\\reihan-agam\\react-js\\hiring-channel\\src\\app.js":"3","D:\\reihan-agam\\react-js\\hiring-channel\\src\\actions\\auth.js":"4","D:\\reihan-agam\\react-js\\hiring-channel\\src\\configs\\theme.js":"5","D:\\reihan-agam\\react-js\\hiring-channel\\src\\utils\\token.js":"6","D:\\reihan-agam\\react-js\\hiring-channel\\src\\components\\layouts\\landing.js":"7","D:\\reihan-agam\\react-js\\hiring-channel\\src\\reducers\\index.js":"8","D:\\reihan-agam\\react-js\\hiring-channel\\src\\actions\\types.js":"9","D:\\reihan-agam\\react-js\\hiring-channel\\src\\components\\layouts\\footer.js":"10","D:\\reihan-agam\\react-js\\hiring-channel\\src\\components\\layouts\\header.js":"11","D:\\reihan-agam\\react-js\\hiring-channel\\src\\reducers\\alert.js":"12","D:\\reihan-agam\\react-js\\hiring-channel\\src\\reducers\\auth.js":"13","D:\\reihan-agam\\react-js\\hiring-channel\\src\\reducers\\engineer.js":"14","D:\\reihan-agam\\react-js\\hiring-channel\\src\\reducers\\message.js":"15","D:\\reihan-agam\\react-js\\hiring-channel\\src\\reducers\\company.js":"16","D:\\reihan-agam\\react-js\\hiring-channel\\src\\actions\\company.js":"17","D:\\reihan-agam\\react-js\\hiring-channel\\src\\actions\\engineer.js":"18","D:\\reihan-agam\\react-js\\hiring-channel\\src\\components\\avatar\\avatar.js":"19","D:\\reihan-agam\\react-js\\hiring-channel\\src\\components\\auth\\login.js":"20","D:\\reihan-agam\\react-js\\hiring-channel\\src\\components\\auth\\register.js":"21","D:\\reihan-agam\\react-js\\hiring-channel\\src\\components\\engineer\\engineerprofile\\profileedit\\profileedititem\\profileedititem.js":"22","D:\\reihan-agam\\react-js\\hiring-channel\\src\\components\\layouts\\headerfilter.js":"23","D:\\reihan-agam\\react-js\\hiring-channel\\src\\components\\engineer\\engineerprofile\\profileshow\\profileshowitem\\profileshowitem.js":"24","D:\\reihan-agam\\react-js\\hiring-channel\\src\\actions\\message.js":"25","D:\\reihan-agam\\react-js\\hiring-channel\\src\\components\\engineer\\engineerprofile\\profileskillsitem\\profileskillsitem.js":"26","D:\\reihan-agam\\react-js\\hiring-channel\\src\\actions\\engineer-router.js":"27","D:\\reihan-agam\\react-js\\hiring-channel\\src\\actions\\company-router.js":"28","D:\\reihan-agam\\react-js\\hiring-channel\\src\\components\\engineer\\engineerprofile\\profileitem\\profileitem.js":"29","D:\\reihan-agam\\react-js\\hiring-channel\\src\\lib\\query-string\\index.js":"30","D:\\reihan-agam\\react-js\\hiring-channel\\src\\components\\Spinner\\Spinner.js":"31","D:\\reihan-agam\\react-js\\hiring-channel\\src\\components\\Layouts\\Landing.js":"32","D:\\reihan-agam\\react-js\\hiring-channel\\src\\components\\Route\\Route.js":"33","D:\\reihan-agam\\react-js\\hiring-channel\\src\\components\\Route\\Private\\Private.js":"34","D:\\reihan-agam\\react-js\\hiring-channel\\src\\components\\Company\\Company.js":"35","D:\\reihan-agam\\react-js\\hiring-channel\\src\\components\\Company\\CompanyProfile\\CompanyProfile.js":"36","D:\\reihan-agam\\react-js\\hiring-channel\\src\\components\\Company\\CompanyProfile\\ProfileEdit\\ProfileEdit.js":"37","D:\\reihan-agam\\react-js\\hiring-channel\\src\\components\\Engineer\\Engineer.js":"38","D:\\reihan-agam\\react-js\\hiring-channel\\src\\components\\Auth\\Register.js":"39","D:\\reihan-agam\\react-js\\hiring-channel\\src\\components\\Layouts\\Page404.js":"40","D:\\reihan-agam\\react-js\\hiring-channel\\src\\components\\Auth\\Login.js":"41","D:\\reihan-agam\\react-js\\hiring-channel\\src\\components\\Engineer\\EngineerProfile\\ProfileEdit\\ProfileEdit.js":"42","D:\\reihan-agam\\react-js\\hiring-channel\\src\\components\\Engineer\\EngineerProfile\\EngineerProfile.js":"43","D:\\reihan-agam\\react-js\\hiring-channel\\src\\components\\Company\\CompanyList\\CompanyList.js":"44","D:\\reihan-agam\\react-js\\hiring-channel\\src\\components\\Engineer\\EngineerList\\EngineerList.js":"45","D:\\reihan-agam\\react-js\\hiring-channel\\src\\components\\Layouts\\PageEmpty.js":"46","D:\\reihan-agam\\react-js\\hiring-channel\\src\\components\\Engineer\\EngineerItem\\EngineerItem.js":"47","D:\\reihan-agam\\react-js\\hiring-channel\\src\\components\\Engineer\\EngineerProfile\\ProfileSkillsItem\\ProfileSkillsItem.js":"48","D:\\reihan-agam\\react-js\\hiring-channel\\src\\components\\Engineer\\EngineerProfile\\ProfileShow\\ProfileShow.js":"49","D:\\reihan-agam\\react-js\\hiring-channel\\src\\components\\Engineer\\EngineerProfile\\ProfileShow\\ProfileShowItem\\ProfileShowItem.js":"50","D:\\reihan-agam\\react-js\\hiring-channel\\src\\components\\Engineer\\EngineerProfile\\ProfileShow\\ConversationLists\\ConversationLists.js":"51","D:\\reihan-agam\\react-js\\hiring-channel\\src\\components\\Engineer\\EngineerProfile\\ProfileShow\\MessageLists\\MessageLists.js":"52","D:\\reihan-agam\\react-js\\hiring-channel\\src\\components\\Avatar\\Avatar.js":"53","D:\\reihan-agam\\react-js\\hiring-channel\\src\\components\\Layouts\\Header.js":"54","D:\\reihan-agam\\react-js\\hiring-channel\\src\\components\\Layouts\\Footer.js":"55","D:\\reihan-agam\\react-js\\hiring-channel\\src\\components\\Layouts\\HeaderFilter.js":"56","D:\\reihan-agam\\react-js\\hiring-channel\\src\\components\\Engineer\\EngineerProfile\\ProfileEdit\\ProfileEditItem\\ProfileEditItem.js":"57","D:\\reihan-agam\\react-js\\hiring-channel\\src\\components\\Engineer\\EngineerProfile\\ProfileItem\\ProfileItem.js":"58","D:\\reihan-agam\\react-js\\hiring-channel\\src\\utils\\helper.js":"59","D:\\reihan-agam\\react-js\\hiring-channel\\src\\components\\Company\\CompanyItem\\CompanyItem.js":"60","D:\\reihan-agam\\react-js\\hiring-channel\\src\\components\\Company\\CompanyProfile\\ProfileItem\\ProfileItem.js":"61","D:\\reihan-agam\\react-js\\hiring-channel\\src\\components\\Company\\CompanyProfile\\ProfileEdit\\ProfileEditItem\\ProfileEditItem.js":"62","D:\\reihan-agam\\react-js\\hiring-channel\\src\\configs\\constants.js":"63","D:\\reihan-agam\\react-js\\hiring-channel\\src\\reducers\\skill.js":"64","D:\\reihan-agam\\react-js\\hiring-channel\\src\\actions\\skill.js":"65","D:\\reihan-agam\\react-js\\hiring-channel\\src\\actions\\jobtype.js":"66","D:\\reihan-agam\\react-js\\hiring-channel\\src\\reducers\\jobtype.js":"67","D:\\reihan-agam\\react-js\\hiring-channel\\src\\components\\Company\\CompanyProfile\\ProfileSkillsItem\\ProfileSkillsItem.js":"68","D:\\reihan-agam\\react-js\\hiring-channel\\src\\components\\Company\\CompanyProfile\\ProfileDetail\\ProfileDetail.js":"69","D:\\reihan-agam\\react-js\\hiring-channel\\src\\components\\Company\\CompanyProfile\\ProfileDetail\\ProfileDetailItem\\ProfileDetailItem.js":"70","D:\\reihan-agam\\react-js\\hiring-channel\\src\\components\\Company\\CompanyProfile\\AddJob\\AddJob.js":"71","D:\\reihan-agam\\react-js\\hiring-channel\\src\\components\\Company\\CompanyProfile\\AddJob\\AddJobItem\\AddJobItem.js":"72","D:\\reihan-agam\\react-js\\hiring-channel\\src\\components\\Company\\CompanyProfile\\EditJob\\EditJob.js":"73","D:\\reihan-agam\\react-js\\hiring-channel\\src\\components\\Company\\CompanyProfile\\EditJob\\EditJobItem\\EditJobItem.js":"74","D:\\reihan-agam\\react-js\\hiring-channel\\src\\reducers\\postjob.js":"75"},{"size":482,"mtime":1610699516739,"results":"76","hashOfConfig":"77"},{"size":555,"mtime":1608811772408,"results":"78","hashOfConfig":"77"},{"size":845,"mtime":1609433768852,"results":"79","hashOfConfig":"77"},{"size":2662,"mtime":1610282137047,"results":"80","hashOfConfig":"77"},{"size":694,"mtime":1608642183479,"results":"81","hashOfConfig":"77"},{"size":242,"mtime":1608534426114,"results":"82","hashOfConfig":"77"},{"size":758,"mtime":1609425574973,"results":"83","hashOfConfig":"77"},{"size":592,"mtime":1611464961997,"results":"84","hashOfConfig":"77"},{"size":4066,"mtime":1611422981032,"results":"85","hashOfConfig":"77"},{"size":122,"mtime":1609425466940,"results":"86","hashOfConfig":"77"},{"size":9821,"mtime":1609425471025,"results":"87","hashOfConfig":"77"},{"size":377,"mtime":1608381635475,"results":"88","hashOfConfig":"77"},{"size":1047,"mtime":1610265673448,"results":"89","hashOfConfig":"77"},{"size":1807,"mtime":1610866675101,"results":"90","hashOfConfig":"77"},{"size":2407,"mtime":1608899848022,"results":"91","hashOfConfig":"77"},{"size":1976,"mtime":1610935697526,"results":"92","hashOfConfig":"77"},{"size":4455,"mtime":1611908627023,"results":"93","hashOfConfig":"77"},{"size":2896,"mtime":1611546327354,"results":"94","hashOfConfig":"77"},{"size":771,"mtime":1608959732274,"results":"95","hashOfConfig":"77"},{"size":2347,"mtime":1608802574947,"results":"96","hashOfConfig":"77"},{"size":3603,"mtime":1609421994167,"results":"97","hashOfConfig":"77"},{"size":13205,"mtime":1609088331825,"results":"98","hashOfConfig":"77"},{"size":2823,"mtime":1609425513439,"results":"99","hashOfConfig":"77"},{"size":8401,"mtime":1609086275352,"results":"100","hashOfConfig":"77"},{"size":4327,"mtime":1610338313419,"results":"101","hashOfConfig":"77"},{"size":325,"mtime":1609425216197,"results":"102","hashOfConfig":"77"},{"size":668,"mtime":1609117521008,"results":"103","hashOfConfig":"77"},{"size":668,"mtime":1609680271975,"results":"104","hashOfConfig":"77"},{"size":4314,"mtime":1609089602997,"results":"105","hashOfConfig":"77"},{"size":873,"mtime":1608532952457,"results":"106","hashOfConfig":"77"},{"size":352,"mtime":1609425653778,"results":"107","hashOfConfig":"77"},{"size":758,"mtime":1609437480442,"results":"108","hashOfConfig":"77"},{"size":2273,"mtime":1611547500836,"results":"109","hashOfConfig":"77"},{"size":458,"mtime":1608812060079,"results":"110","hashOfConfig":"77"},{"size":2674,"mtime":1609683563076,"results":"111","hashOfConfig":"77"},{"size":708,"mtime":1609684488164,"results":"112","hashOfConfig":"77"},{"size":1035,"mtime":1611479096741,"results":"113","hashOfConfig":"77"},{"size":2683,"mtime":1610758914725,"results":"114","hashOfConfig":"77"},{"size":13808,"mtime":1610335970042,"results":"115","hashOfConfig":"77"},{"size":214,"mtime":1609465321141,"results":"116","hashOfConfig":"77"},{"size":2879,"mtime":1611907310614,"results":"117","hashOfConfig":"77"},{"size":1240,"mtime":1611546120756,"results":"118","hashOfConfig":"77"},{"size":720,"mtime":1609684391183,"results":"119","hashOfConfig":"77"},{"size":405,"mtime":1611548715233,"results":"120","hashOfConfig":"77"},{"size":413,"mtime":1611547529474,"results":"121","hashOfConfig":"77"},{"size":153,"mtime":1609425994867,"results":"122","hashOfConfig":"77"},{"size":1869,"mtime":1611547943063,"results":"123","hashOfConfig":"77"},{"size":325,"mtime":1609425216197,"results":"124","hashOfConfig":"77"},{"size":1721,"mtime":1610262768419,"results":"125","hashOfConfig":"77"},{"size":8424,"mtime":1610275487748,"results":"126","hashOfConfig":"77"},{"size":4844,"mtime":1610275449897,"results":"127","hashOfConfig":"77"},{"size":1093,"mtime":1608994854698,"results":"128","hashOfConfig":"77"},{"size":771,"mtime":1608959732274,"results":"129","hashOfConfig":"77"},{"size":10001,"mtime":1611413063712,"results":"130","hashOfConfig":"77"},{"size":122,"mtime":1609425466940,"results":"131","hashOfConfig":"77"},{"size":5309,"mtime":1609683471102,"results":"132","hashOfConfig":"77"},{"size":12577,"mtime":1611976229503,"results":"133","hashOfConfig":"77"},{"size":4575,"mtime":1611546929754,"results":"134","hashOfConfig":"77"},{"size":1853,"mtime":1610604275088,"results":"135","hashOfConfig":"77"},{"size":2108,"mtime":1611907564663,"results":"136","hashOfConfig":"77"},{"size":3575,"mtime":1611408504057,"results":"137","hashOfConfig":"77"},{"size":8160,"mtime":1611545847825,"results":"138","hashOfConfig":"77"},{"size":106,"mtime":1610758890818,"results":"139","hashOfConfig":"77"},{"size":663,"mtime":1610865510385,"results":"140","hashOfConfig":"77"},{"size":521,"mtime":1610866535728,"results":"141","hashOfConfig":"77"},{"size":534,"mtime":1610941095991,"results":"142","hashOfConfig":"77"},{"size":679,"mtime":1610937180344,"results":"143","hashOfConfig":"77"},{"size":325,"mtime":1610946002785,"results":"144","hashOfConfig":"77"},{"size":776,"mtime":1611364184108,"results":"145","hashOfConfig":"77"},{"size":4128,"mtime":1611484856557,"results":"146","hashOfConfig":"77"},{"size":1331,"mtime":1611412872806,"results":"147","hashOfConfig":"77"},{"size":7250,"mtime":1611553299271,"results":"148","hashOfConfig":"77"},{"size":1321,"mtime":1611547453255,"results":"149","hashOfConfig":"77"},{"size":7974,"mtime":1611977654917,"results":"150","hashOfConfig":"77"},{"size":865,"mtime":1611465554316,"results":"151","hashOfConfig":"77"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},"ujubtp",{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"173","messages":"174","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"175","messages":"176","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"154"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"154"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"154"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"154"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"154"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194","usedDeprecatedRules":"154"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"197"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"197"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203","usedDeprecatedRules":"197"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"197"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"208","messages":"209","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210","usedDeprecatedRules":"197"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"197"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"225","usedDeprecatedRules":"154"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"242","usedDeprecatedRules":"154"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"265","usedDeprecatedRules":"154"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"274","usedDeprecatedRules":"154"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"281","messages":"282","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"287","usedDeprecatedRules":"154"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"290","usedDeprecatedRules":"154"},{"filePath":"291","messages":"292","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"293","usedDeprecatedRules":"154"},{"filePath":"294","messages":"295","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"298","usedDeprecatedRules":"154"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"301","messages":"302","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"303","messages":"304","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"305","usedDeprecatedRules":"154"},{"filePath":"306","messages":"307","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"308","messages":"309","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"310","messages":"311","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"312","messages":"313","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"314","messages":"315","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"316","usedDeprecatedRules":"154"},{"filePath":"317","messages":"318","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"319","messages":"320","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"321","messages":"322","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"323","usedDeprecatedRules":"154"},"D:\\reihan-agam\\react-js\\hiring-channel\\src\\index.js",[],["324","325"],"D:\\reihan-agam\\react-js\\hiring-channel\\src\\store.js",[],"D:\\reihan-agam\\react-js\\hiring-channel\\src\\app.js",[],"D:\\reihan-agam\\react-js\\hiring-channel\\src\\actions\\auth.js",[],"D:\\reihan-agam\\react-js\\hiring-channel\\src\\configs\\theme.js",[],"D:\\reihan-agam\\react-js\\hiring-channel\\src\\utils\\token.js",[],"D:\\reihan-agam\\react-js\\hiring-channel\\src\\components\\layouts\\landing.js",[],"D:\\reihan-agam\\react-js\\hiring-channel\\src\\reducers\\index.js",[],"D:\\reihan-agam\\react-js\\hiring-channel\\src\\actions\\types.js",[],"D:\\reihan-agam\\react-js\\hiring-channel\\src\\components\\layouts\\footer.js",[],"D:\\reihan-agam\\react-js\\hiring-channel\\src\\components\\layouts\\header.js",["326","327"],"D:\\reihan-agam\\react-js\\hiring-channel\\src\\reducers\\alert.js",["328"],"import { SET_ALERT, REMOVE_ALERT } from \"../actions/types\"\r\nconst initialState = []\r\nexport default function (state = initialState, action) {\r\n  const { type, payload } = action\r\n  switch (type) {\r\n    case SET_ALERT:\r\n      return [payload, ...state]\r\n    case REMOVE_ALERT:\r\n      return state.filter(alert => alert.id !== payload)\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","D:\\reihan-agam\\react-js\\hiring-channel\\src\\reducers\\auth.js",["329"],"import { REGISTER_SUCCESS, REGISTER_FAIL, LOGIN_SUCCESS, LOGIN_FAIL, LOGOUT, AUTH_ERROR, USER_LOADED } from \"../actions/types\"\r\nconst initialState = {\r\n  token: localStorage.getItem(\"token\"),\r\n  isAuthenticated: {},\r\n  user: {},\r\n  loading: true\r\n}\r\nexport default function (state = initialState, action) {\r\n  const { type, payload } = action\r\n  switch (type) {\r\n    case USER_LOADED:\r\n      return {\r\n        ...state,\r\n        isAuthenticated: true,\r\n        loading: false,\r\n        user: payload\r\n      }\r\n    case REGISTER_SUCCESS:\r\n    case LOGIN_SUCCESS:\r\n      localStorage.setItem(\"token\", payload.token)\r\n      return {\r\n        ...state,\r\n        ...payload,\r\n        isAuthenticated: true,\r\n        loading: false\r\n      }\r\n    case REGISTER_FAIL:\r\n    case AUTH_ERROR:\r\n    case LOGIN_FAIL:\r\n    case LOGOUT:\r\n      localStorage.removeItem(\"token\")\r\n      return {\r\n        ...state,\r\n        token: null,\r\n        isAuthenticated: false,\r\n        loading: false,\r\n        user: {}\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","D:\\reihan-agam\\react-js\\hiring-channel\\src\\reducers\\engineer.js",["330"],"import { LOADING, LOADED, GET_ENGINEERS, GET_ENGINEERS_ERROR, GET_CURRENT_PROFILE_ENGINEER, GET_CURRENT_PROFILE_ENGINEER_ERROR, GET_PROFILE_ENGINEER_BY_SLUG, GET_PROFILE_ENGINEER_BY_SLUG_ERROR, UPDATE_PROFILE_ENGINEER, UPDATE_PROFILE_ENGINEER_ERROR, DELETE_ENGINEER, DELETE_ENGINEER_ERROR } from \"../actions/types\"\r\nconst initialState = {\r\n  engineers: [],\r\n  engineer: {},\r\n  error: {},\r\n  loading: true,\r\n  search: \"\"\r\n}\r\nexport default (state = initialState, action) => {\r\n  const { type, payload } = action\r\n  switch (type) {\r\n    case LOADING:\r\n      return {\r\n        ...state,\r\n        loading: true\r\n      }\r\n    case LOADED:\r\n      return {\r\n        ...state,\r\n        loading: false\r\n      }\r\n    case GET_ENGINEERS:\r\n      return {\r\n        ...state,\r\n        engineers: payload\r\n      }\r\n    case GET_ENGINEERS_ERROR:\r\n      return {\r\n        ...state,\r\n        error: payload\r\n      }\r\n    case GET_CURRENT_PROFILE_ENGINEER:\r\n      return {\r\n        ...state,\r\n        engineer: payload\r\n      }\r\n    case GET_CURRENT_PROFILE_ENGINEER_ERROR:\r\n      return {\r\n        ...state,\r\n        error: payload\r\n      }\r\n    case GET_PROFILE_ENGINEER_BY_SLUG:\r\n      return {\r\n        ...state,\r\n        engineer: payload\r\n      }\r\n    case GET_PROFILE_ENGINEER_BY_SLUG_ERROR:\r\n      return {\r\n        ...state,\r\n        error: payload\r\n      }\r\n    case UPDATE_PROFILE_ENGINEER:\r\n      return state\r\n    case UPDATE_PROFILE_ENGINEER_ERROR:\r\n      return {\r\n        ...state,\r\n        error: payload\r\n      }\r\n    case DELETE_ENGINEER:\r\n      return {\r\n        ...state,\r\n        engineers: state.engineers.filter(engineer => engineer.id !== payload)\r\n      }\r\n    case DELETE_ENGINEER_ERROR:\r\n      return {\r\n        ...state,\r\n        error: payload\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","D:\\reihan-agam\\react-js\\hiring-channel\\src\\reducers\\message.js",["331"],"import { GET_CONVERSATION_LISTS, GET_CONVERSATION_LISTS_ERROR, GET_REPLY_CONVERSATION_REPLIES, GET_REPLY_CONVERSATION_REPLIES_ERROR, CHECK_CONVERSATIONS, CHECK_CONVERSATIONS_ERROR, GET_USER_GUEST_UID, GET_USER_GUEST_UID_ERROR, GET_CONVERSATION_UID, GET_CONVERSATION_UID_ERROR, INSERT_INTO_CONVERSATIONS, INSERT_INTO_CONVERSATIONS_ERROR, INSERT_INTO_CONVERSATION_REPLIES, INSERT_INTO_CONVERSATION_REPLIES_ERROR, CHANGES_REPLY_TO_REALTIME } from \"../actions/types\"\r\nconst initialState = {\r\n  userGuestUid: null,\r\n  conversationUid: null,\r\n  checkConversations: null,\r\n  conversationLists: [],\r\n  replies: [],\r\n  error: {}\r\n}\r\nexport default function (state = initialState, action) {\r\n  const { type, payload } = action\r\n  switch (type) {\r\n    case GET_CONVERSATION_LISTS:\r\n      return {\r\n        ...state,\r\n        conversationLists: payload\r\n      }\r\n    case GET_CONVERSATION_LISTS_ERROR:\r\n      return {\r\n        ...state,\r\n        error: payload\r\n      }\r\n    case GET_REPLY_CONVERSATION_REPLIES:\r\n      return {\r\n        ...state,\r\n        replies: payload\r\n      }\r\n    case GET_REPLY_CONVERSATION_REPLIES_ERROR:\r\n      return {\r\n        ...state,\r\n        error: payload\r\n      }\r\n    case GET_USER_GUEST_UID:\r\n      return {\r\n        ...state,\r\n        userGuestUid: payload\r\n      }\r\n    case GET_USER_GUEST_UID_ERROR:\r\n      return {\r\n        ...state,\r\n        error: payload\r\n      }\r\n    case CHECK_CONVERSATIONS:\r\n      return {\r\n        ...state,\r\n        checkConversations: payload\r\n      }\r\n    case CHECK_CONVERSATIONS_ERROR:\r\n      return {\r\n        ...state,\r\n        error: payload\r\n      }\r\n    case GET_CONVERSATION_UID:\r\n      return {\r\n        ...state,\r\n        conversationUid: payload\r\n      }\r\n    case GET_CONVERSATION_UID_ERROR:\r\n      return {\r\n        ...state,\r\n        error: payload\r\n      }\r\n    case INSERT_INTO_CONVERSATIONS:\r\n      return {\r\n        ...state\r\n      }\r\n    case INSERT_INTO_CONVERSATIONS_ERROR:\r\n      return {\r\n        ...state,\r\n        error: payload\r\n      }\r\n    case CHANGES_REPLY_TO_REALTIME:\r\n      return {\r\n        ...state,\r\n        replies: state.replies.concat(payload[0].payload)\r\n      }\r\n    case INSERT_INTO_CONVERSATION_REPLIES:\r\n      return {\r\n        ...state\r\n      }\r\n    case INSERT_INTO_CONVERSATION_REPLIES_ERROR:\r\n      return {\r\n        ...state,\r\n        error: payload\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","D:\\reihan-agam\\react-js\\hiring-channel\\src\\reducers\\company.js",["332"],"import { LOADING, LOADED, GET_COMPANIES, GET_COMPANIES_ERROR, GET_CURRENT_PROFILE_COMPANY, GET_CURRENT_PROFILE_COMPANY_ERROR, STORE_ADD_JOBS, STORE_ADD_JOBS_ERROR, GET_PROFILE_COMPANY_BY_SLUG, GET_PROFILE_COMPANY_BY_SLUG_ERROR, UPDATE_PROFILE_COMPANY, UPDATE_PROFILE_COMPANY_ERROR, DELETE_COMPANY, DELETE_COMPANY_ERROR } from \"../actions/types\"\r\nconst initialState = {\r\n  companies: [],\r\n  company: {},\r\n  error: {},\r\n  loading: true,\r\n  search: \"\"\r\n}\r\nexport default function (state = initialState, action) {\r\n  const { type, payload } = action\r\n  switch (type) {\r\n    case LOADING:\r\n      return {\r\n        ...state,\r\n        loading: true\r\n      }\r\n    case LOADED:\r\n      return {\r\n        ...state,\r\n        loading: false\r\n      }\r\n    case GET_COMPANIES:\r\n      return {\r\n        ...state,\r\n        companies: payload\r\n      }\r\n    case GET_COMPANIES_ERROR:\r\n      return {\r\n        ...state,\r\n        error: payload\r\n      }\r\n    case GET_CURRENT_PROFILE_COMPANY:\r\n      return {\r\n        ...state,\r\n        company: payload\r\n      }\r\n    case GET_CURRENT_PROFILE_COMPANY_ERROR:\r\n      return {\r\n        ...state,\r\n        error: payload\r\n      }\r\n    case GET_PROFILE_COMPANY_BY_SLUG:\r\n      return {\r\n        ...state,\r\n        company: payload\r\n      }\r\n    case GET_PROFILE_COMPANY_BY_SLUG_ERROR:\r\n      return {\r\n        ...state,\r\n        error: payload\r\n      }\r\n    case UPDATE_PROFILE_COMPANY:\r\n      return state\r\n    case UPDATE_PROFILE_COMPANY_ERROR:\r\n      return {\r\n        ...state,\r\n        error: payload\r\n      }\r\n    case STORE_ADD_JOBS:\r\n      return state\r\n    case STORE_ADD_JOBS_ERROR:\r\n      return {\r\n        ...state,\r\n        error: payload\r\n      }\r\n    case DELETE_COMPANY:\r\n      return {\r\n        ...state,\r\n        companies: state.companies.filter(company => company.id !== payload)\r\n      }\r\n    case DELETE_COMPANY_ERROR:\r\n      return {\r\n        ...state,\r\n        error: payload\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","D:\\reihan-agam\\react-js\\hiring-channel\\src\\actions\\company.js",[],"D:\\reihan-agam\\react-js\\hiring-channel\\src\\actions\\engineer.js",["333","334"],"import axios from \"axios\"\r\nimport store from \"../store.js\"\r\nimport { Toast, auth } from \"../utils/helper\"\r\nimport { logout } from \"./auth\"\r\nimport { LOADING, LOADED, GET_ENGINEERS, GET_ENGINEERS_ERROR, GET_CURRENT_PROFILE_ENGINEER, GET_CURRENT_PROFILE_ENGINEER_ERROR, GET_PROFILE_ENGINEER_BY_SLUG, GET_PROFILE_ENGINEER_BY_SLUG_ERROR, UPDATE_PROFILE_ENGINEER, UPDATE_PROFILE_ENGINEER_ERROR } from \"./types\"\r\nexport const getEngineers = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: LOADING\r\n    })\r\n    const response = await axios.get(`${process.env.REACT_APP_GET_LOCAL_ENGINEERS}/${getState().router.location.search}`)\r\n    dispatch({\r\n      type: LOADED\r\n    })\r\n    dispatch({\r\n      type: GET_ENGINEERS,\r\n      payload: response.data\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: GET_ENGINEERS_ERROR,\r\n      payload: error\r\n    })\r\n  }\r\n}\r\nexport const getCurrentProfileEngineer = () => async dispatch => {\r\n  try {\r\n    dispatch({\r\n      type: LOADING\r\n    })\r\n    const response = await axios.post(`${process.env.REACT_APP_GET_LOCAL_ENGINEERS}/profile`, { userUid: auth().uid })\r\n    dispatch({\r\n      type: LOADED\r\n    })\r\n    dispatch({\r\n      type: GET_CURRENT_PROFILE_ENGINEER,\r\n      payload: response.data.data\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: GET_CURRENT_PROFILE_ENGINEER_ERROR,\r\n      payload: error\r\n    })\r\n  }\r\n}\r\nexport const getProfileEngineerBySlug = slug => async dispatch => {\r\n  try {\r\n    dispatch({\r\n      type: LOADING\r\n    })\r\n    const response = await axios.get(`${process.env.REACT_APP_GET_LOCAL_ENGINEERS}/profile/${slug}`)\r\n    dispatch({\r\n      type: LOADED\r\n    })\r\n    dispatch({\r\n      type: GET_PROFILE_ENGINEER_BY_SLUG,\r\n      payload: response.data.data\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: GET_PROFILE_ENGINEER_BY_SLUG_ERROR,\r\n      payload: error\r\n    })\r\n  }\r\n}\r\nexport const updateProfileEngineer = (payload, history) => async dispatch => {\r\n  try {\r\n    dispatch({\r\n      type: LOADING\r\n    })\r\n    await axios.put(`${process.env.REACT_APP_GET_LOCAL_ENGINEERS}`, payload)\r\n    dispatch({\r\n      type: LOADED\r\n    })\r\n    Toast.fire({\r\n      icon: \"success\",\r\n      title: \"Profile Updated\"\r\n    })\r\n    history.push(\"/engineers\")\r\n    dispatch({\r\n      type: UPDATE_PROFILE_ENGINEER\r\n    })\r\n  } catch (err) {\r\n    dispatch({\r\n      type: UPDATE_PROFILE_ENGINEER_ERROR,\r\n      payload: err\r\n    })\r\n  }\r\n}\r\n// export const deleteProfileEngineer = (engineer_id, user_id) => async dispatch => {\r\n//   store.dispatch(logout())\r\n//   try {\r\n//     await axios.delete(`${process.env.REACT_APP_GET_LOCAL_ENGINEERS}/${engineer_id}/${user_id}`)\r\n//     dispatch({\r\n//       type: DELETE_ENGINEER,\r\n//       payload: engineer_id\r\n//     })\r\n//   } catch (error) {\r\n//     dispatch({\r\n//       type: DELETE_ENGINEER_ERROR,\r\n//       payload: error\r\n//     })\r\n//   }\r\n// }\r\n","D:\\reihan-agam\\react-js\\hiring-channel\\src\\components\\avatar\\avatar.js",[],["335","336"],"D:\\reihan-agam\\react-js\\hiring-channel\\src\\components\\auth\\login.js",["337","338","339","340"],"import React, { useState } from \"react\"\r\nimport { Link, Redirect } from \"react-router-dom\"\r\nimport { Button, InputLabel, FormControl, TextField, MenuItem, Select, Typography } from \"@material-ui/core\"\r\nimport { connect } from \"react-redux\"\r\nimport { login } from \"../../actions/auth\"\r\nconst Login = ({ login, isAuthenticated }) => {\r\n  const [formData, setFormData] = useState({\r\n    email: \"\",\r\n    password: \"\"\r\n  })\r\n  const { email, password } = formData\r\n  const onChange = event => setFormData({ ...formData, [event.target.name]: event.target.value })\r\n  const onSubmit = event => {\r\n    event.preventDefault()\r\n    login(email, password)\r\n  }\r\n  if (isAuthenticated) {\r\n    return <Redirect to=\"/\" />\r\n  }\r\n  return (\r\n    <>\r\n      <div className=\"columns justify-center min-h-screen\">\r\n        <div className=\"column marginless\" id=\"cover-background-login\">\r\n          <div id=\"cover-login\"></div>\r\n          <h2 className=\"title mx-2 text-white\">Hire expert freelancers for any job, online</h2>\r\n          <h3 className=\"sub-title mx-2 text-white\">Millions of small businesses use Frelancer to turn their ideas into reality.</h3>\r\n        </div>\r\n        <div className=\"column\">\r\n          <Typography variant=\"h5\" component=\"h5\" gutterBottom>\r\n            Login\r\n          </Typography>\r\n          <form onSubmit={event => onSubmit(event)}>\r\n            <TextField onChange={event => onChange(event)} value={email ?? \"\"} name=\"email\" margin=\"normal\" variant=\"outlined\" label=\"Email\" fullWidth />\r\n            <TextField onChange={event => onChange(event)} value={password ?? \"\"} name=\"password\" margin=\"normal\" variant=\"outlined\" label=\"Password\" fullWidth />\r\n            <div className=\"margin-normal\">\r\n              <Button style={{ margin: 0 }} type=\"submit\" variant=\"contained\" color=\"primary\" fullWidth>\r\n                Login\r\n              </Button>\r\n            </div>\r\n            <div className=\"margin-normal\">\r\n              <Button style={{ margin: 0 }} type=\"button\" variant=\"contained\" color=\"primary\" component={Link} to=\"/\" fullWidth>\r\n                Back\r\n              </Button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: state.auth.isAuthenticated\r\n})\r\nexport default connect(mapStateToProps, { login })(Login)\r\n","D:\\reihan-agam\\react-js\\hiring-channel\\src\\components\\auth\\register.js",["341","342"],"import React, { Fragment, useState } from \"react\"\r\nimport { Link, Redirect } from \"react-router-dom\"\r\nimport { createStyles, makeStyles } from \"@material-ui/core/styles\"\r\nimport { Button, InputLabel, FormControl, TextField, MenuItem, Select, Typography } from \"@material-ui/core\"\r\nimport { connect } from \"react-redux\"\r\nimport { register } from \"../../actions/auth\"\r\nimport \"react-dropdown/style.css\"\r\n\r\nconst Register = ({ register, isAuthenticated, history }) => {\r\n  const [formData, setFormData] = useState({\r\n    fullname: \"\",\r\n    nickname: \"\",\r\n    email: \"\",\r\n    password: \"\"\r\n  })\r\n  const [role, setRole] = useState()\r\n  const { fullname, nickname, email, password } = formData\r\n  const onChange = event => setFormData({ ...formData, [event.target.name]: event.target.value })\r\n  const onChangeRole = element => {\r\n    setRole(element.target.value)\r\n  }\r\n  const onSubmit = event => {\r\n    event.preventDefault()\r\n    register(fullname, nickname, email, password, role, history)\r\n  }\r\n  if (isAuthenticated) {\r\n    return <Redirect to=\"/\" />\r\n  }\r\n  return (\r\n    <Fragment>\r\n      <div className=\"columns justify-center min-h-screen\">\r\n        <div className=\"column marginless\" id=\"cover-background-register\">\r\n          <div id=\"cover-register\"></div>\r\n          <h2 className=\"title mx-3 text-white\">Hire expert freelancers for any job, online</h2>\r\n          <h3 className=\"sub-title mx-3 text-white\">Millions of small businesses use Frelancer to turn their ideas into reality.</h3>\r\n        </div>\r\n        <div className=\"column\">\r\n          <Typography variant=\"h5\" component=\"h5\" gutterBottom>\r\n            Register\r\n          </Typography>\r\n          <form onSubmit={event => onSubmit(event)}>\r\n            <TextField onChange={onChange} value={fullname ?? \"\"} name=\"fullname\" margin=\"normal\" variant=\"outlined\" label=\"Fullname\" fullWidth />\r\n            <TextField onChange={onChange} value={nickname ?? \"\"} name=\"nickname\" margin=\"normal\" variant=\"outlined\" label=\"Nickname\" fullWidth />\r\n            <TextField onChange={onChange} value={email ?? \"\"} name=\"email\" margin=\"normal\" variant=\"outlined\" label=\"Email\" fullWidth />\r\n            <TextField onChange={onChange} value={password ?? \"\"} name=\"password\" margin=\"normal\" variant=\"outlined\" label=\"Password\" fullWidth />\r\n            <FormControl margin=\"normal\" variant=\"outlined\" fullWidth>\r\n              <InputLabel htmlFor=\"outlined-role\">Select your Role</InputLabel>\r\n              <Select\r\n                inputProps={{\r\n                  name: \"role\",\r\n                  id: \"outlined-role\"\r\n                }}\r\n                value={role}\r\n                label=\"Select your Role\"\r\n                onChange={event => onChangeRole(event)}\r\n              >\r\n                <MenuItem value={1}>Engineer</MenuItem>\r\n                <MenuItem value={2}>Company</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n            <div className=\"margin-normal\">\r\n              <Button style={{ margin: 0 }} type=\"submit\" variant=\"contained\" color=\"primary\" fullWidth>\r\n                Register\r\n              </Button>\r\n            </div>\r\n            <div className=\"margin-normal\">\r\n              <Button style={{ margin: 0 }} type=\"button\" variant=\"contained\" color=\"primary\" component={Link} to=\"/\" fullWidth>\r\n                Back\r\n              </Button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: state.auth.isAuthenticated\r\n})\r\nexport default connect(mapStateToProps, { register })(Register)\r\n","D:\\reihan-agam\\react-js\\hiring-channel\\src\\components\\engineer\\engineerprofile\\profileedit\\profileedititem\\profileedititem.js",[],"D:\\reihan-agam\\react-js\\hiring-channel\\src\\components\\layouts\\headerfilter.js",[],"D:\\reihan-agam\\react-js\\hiring-channel\\src\\components\\engineer\\engineerprofile\\profileshow\\profileshowitem\\profileshowitem.js",["343"],"import React, { useState, useEffect, useRef } from \"react\"\r\nimport { Container, Grid, Badge, Paper, Button, Modal, Input, makeStyles } from \"@material-ui/core\"\r\nimport { Link } from \"react-router-dom\"\r\nimport * as moment from \"moment\"\r\nimport Pusher from \"pusher-js\"\r\nimport { withStyles } from \"@material-ui/core/styles\"\r\nimport PersonIcon from \"@material-ui/icons/Person\"\r\nimport EmailIcon from \"@material-ui/icons/Email\"\r\nimport CakeIcon from \"@material-ui/icons/Cake\"\r\nimport PhoneIcon from \"@material-ui/icons/Phone\"\r\nimport LocationOnIcon from \"@material-ui/icons/LocationOn\"\r\nimport SlideshowIcon from \"@material-ui/icons/Slideshow\"\r\nimport MessageIcon from \"@material-ui/icons/Message\"\r\nimport AvatarComponent from \"../../../../avatar/avatar\"\r\nimport ConversationLists from \"../conversationlists\"\r\nimport MessageLists from \"../messagelists\"\r\nimport ProfileSkillsItem from \"../../profileskillsitem/profileskillsitem\"\r\n\r\nconst ProfileShowItem = ({ engineer, user, replies, getConversationLists, getReplyConversationReplies, conversationLists, changesReplyToRealtime, getCheckConversations, checkConversations, InsertIntoConversationReplies }) => {\r\n  const messagesEndRef = useRef(null)\r\n  const [open, setOpen] = useState(false)\r\n  const [inputMessage, setInputMessage] = useState(\"\")\r\n  useEffect(() => {\r\n    const pusher = new Pusher(\"f0c968ffa2c271711c29\", {\r\n      cluster: \"ap1\",\r\n      forceTLS: true\r\n    })\r\n    const fetchData = async () => {\r\n      await getConversationLists(engineer.user_uid)\r\n      await getCheckConversations(engineer.user_uid)\r\n      await getReplyConversationReplies(checkConversations)\r\n    }\r\n    fetchData()\r\n    const channel = pusher.subscribe(\"my-channel\")\r\n    channel.bind(\"my-event\", async data => {\r\n      try {\r\n        await changesReplyToRealtime(data)\r\n      } catch (error) {\r\n        console.log(error)\r\n      } finally {\r\n        if (messagesEndRef.current !== null) {\r\n          messagesEndRef.current.scrollTop = messagesEndRef.current.scrollHeight\r\n        }\r\n      }\r\n    })\r\n    return () => {\r\n      channel.unbind(\"my-event\")\r\n      channel.unsubscribe(\"my-channel\")\r\n    }\r\n  }, [engineer, changesReplyToRealtime, checkConversations, getCheckConversations, getConversationLists, getReplyConversationReplies])\r\n\r\n  const StyledBadge = withStyles(theme => ({\r\n    badge: {\r\n      right: 8,\r\n      top: 8,\r\n      fontSize: 14,\r\n      backgroundColor: \"#ff002a\",\r\n      overlap: \"circle\",\r\n      borderRadius: \"50%\",\r\n      border: `2px solid ${theme.palette.background.paper}`,\r\n      padding: \"14px 10px\"\r\n    }\r\n  }))(Badge)\r\n  const useStyles = makeStyles(theme => ({\r\n    root: {\r\n      flexGrow: 1\r\n    },\r\n    paper: {\r\n      padding: theme.spacing(2)\r\n    }\r\n  }))\r\n  const classes = useStyles()\r\n  const toggleMsgOpen = async () => {\r\n    await getConversationLists(engineer.user_uid)\r\n    setOpen(!open)\r\n  }\r\n  const handleMessage = event => {\r\n    setInputMessage(event.target.value)\r\n  }\r\n  const handleEnterMessage = async event => {\r\n    let data = {\r\n      id: new Date(),\r\n      reply: inputMessage,\r\n      createdAt: moment().format(\"YYYY-MM-DD HH:mm:ss\")\r\n    }\r\n    if (event.which === 13) {\r\n      try {\r\n        await InsertIntoConversationReplies(engineer.user_uid, data)\r\n      } catch (error) {\r\n        console.log(error)\r\n      } finally {\r\n        messagesEndRef.current.scrollTop = messagesEndRef.current.scrollHeight\r\n        setInputMessage(\"\")\r\n      }\r\n    }\r\n  }\r\n  return (\r\n    <div>\r\n      <div className=\"backdrop-top\"></div>\r\n      <Container className=\"mt-64\" fixed>\r\n        <div className={classes.root}>\r\n          <Grid container spacing={4}>\r\n            <Grid item md={4} xs={12}>\r\n              <Paper className={classes.paper}>\r\n                <Grid container>\r\n                  <Grid item xs={6} md={6}>\r\n                    <AvatarComponent imageSource={engineer.avatar} altName={engineer.name} type=\"engineers\" width=\"80\" height=\"80\" spaceBottom=\"20\" />\r\n                  </Grid>\r\n                  <Grid item xs={6} md={4}>\r\n                    {/* <StyledBadge badgeContent={4} color=\"secondary\"> */}\r\n                    <Button variant=\"contained\" color=\"primary\" onClick={toggleMsgOpen} startIcon={<MessageIcon />}>\r\n                      Messages\r\n                    </Button>\r\n                    {/* </StyledBadge> */}\r\n                    <Modal open={open} onClose={toggleMsgOpen}>\r\n                      <Paper className=\"p-5 conversation-lists\">\r\n                        {user.uid !== engineer.user_uid && (\r\n                          <div className=\"p-5 relative container-direct-message\">\r\n                            <MessageLists replies={replies} userGuestUid={engineer.user_uid} messagesEndRef={messagesEndRef} />\r\n                            <div className=\"bar-bottom-message p-2\">\r\n                              <Input fullWidth name=\"message\" value={inputMessage} onChange={handleMessage} onKeyPress={handleEnterMessage} />\r\n                            </div>\r\n                          </div>\r\n                        )}\r\n                        {user.uid === engineer.user_uid && (\r\n                          <div>\r\n                            {conversationLists.length === 0 && <p className=\"center\">No conversations.</p>}\r\n                            <ConversationLists getCheckConversations={getCheckConversations} conversationLists={conversationLists} />\r\n                          </div>\r\n                        )}\r\n                      </Paper>\r\n                    </Modal>\r\n                  </Grid>\r\n                </Grid>\r\n                <Grid container>\r\n                  <Grid item md={2} xs={2}>\r\n                    <PersonIcon />\r\n                  </Grid>\r\n                  <Grid item md={10} xs={10}>\r\n                    <p>{engineer.fullname}</p>\r\n                  </Grid>\r\n                </Grid>\r\n                <Grid container>\r\n                  <Grid item md={2} xs={2}>\r\n                    <EmailIcon />\r\n                  </Grid>\r\n                  <Grid item md={10} xs={10}>\r\n                    <p> {engineer.email} </p>\r\n                  </Grid>\r\n                </Grid>\r\n                <Grid container>\r\n                  <Grid item md={2} xs={2}>\r\n                    <CakeIcon />\r\n                  </Grid>\r\n                  <Grid item md={10} xs={10}>\r\n                    <p> {moment(engineer.birthdate).format(\"D MMMM YYYY\")} </p>\r\n                  </Grid>\r\n                </Grid>\r\n                <Grid container>\r\n                  <Grid item md={2} xs={2}>\r\n                    <LocationOnIcon />\r\n                  </Grid>\r\n                  <Grid item md={10} xs={10}>\r\n                    <p className=\"leading-loose\"> {engineer.location} </p>\r\n                  </Grid>\r\n                </Grid>\r\n                <Grid container>\r\n                  <Grid item md={2} xs={2}>\r\n                    <PhoneIcon />\r\n                  </Grid>\r\n                  <Grid item md={10} xs={10}>\r\n                    <p> {engineer.telephone} </p>\r\n                  </Grid>\r\n                </Grid>\r\n                <Grid container>\r\n                  <Grid item md={2} xs={2}>\r\n                    <SlideshowIcon />\r\n                  </Grid>\r\n                  <Grid item md={10} xs={10}>\r\n                    <p> {engineer.showcase} </p>\r\n                  </Grid>\r\n                </Grid>\r\n                <Button type=\"button\" variant=\"contained\" color=\"primary\" component={Link} to=\"/engineers\">\r\n                  Back\r\n                </Button>\r\n              </Paper>\r\n            </Grid>\r\n            <Grid item md={4} xs={12}>\r\n              <Paper className={classes.paper}>\r\n                <p> {engineer.description} </p>\r\n              </Paper>\r\n            </Grid>\r\n            <Grid item md={4} xs={12}>\r\n              <Paper className={classes.paper}>\r\n                <p className=\"mb-2\">\r\n                  skills\r\n                  <ProfileSkillsItem items={engineer.skills} />\r\n                </p>\r\n              </Paper>\r\n              <div className=\"mt-6\">\r\n                <Paper className={classes.paper}>\r\n                  <p className=\"mb-2\">Expected Salary</p>\r\n                  <p>{engineer.salary}</p>\r\n                </Paper>\r\n              </div>\r\n            </Grid>\r\n          </Grid>\r\n        </div>\r\n      </Container>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProfileShowItem\r\n","D:\\reihan-agam\\react-js\\hiring-channel\\src\\actions\\message.js",[],"D:\\reihan-agam\\react-js\\hiring-channel\\src\\components\\engineer\\engineerprofile\\profileskillsitem\\profileskillsitem.js",[],"D:\\reihan-agam\\react-js\\hiring-channel\\src\\actions\\engineer-router.js",[],"D:\\reihan-agam\\react-js\\hiring-channel\\src\\actions\\company-router.js",[],"D:\\reihan-agam\\react-js\\hiring-channel\\src\\components\\engineer\\engineerprofile\\profileitem\\profileitem.js",[],"D:\\reihan-agam\\react-js\\hiring-channel\\src\\lib\\query-string\\index.js",[],"D:\\reihan-agam\\react-js\\hiring-channel\\src\\components\\Spinner\\Spinner.js",["344"],"import React from \"react\"\r\nexport default () => (\r\n  <div className=\"flex align-i-center justify-c-center min-h-screen\">\r\n    <div className=\"spinner spinner-loader\">\r\n      <span className=\"spinner-item-loader\"></span>\r\n      <span className=\"spinner-item-loader\"></span>\r\n      <span className=\"spinner-item-loader\"></span>\r\n    </div>\r\n  </div>\r\n)\r\n","D:\\reihan-agam\\react-js\\hiring-channel\\src\\components\\Layouts\\Landing.js",[],"D:\\reihan-agam\\react-js\\hiring-channel\\src\\components\\Route\\Route.js",[],"D:\\reihan-agam\\react-js\\hiring-channel\\src\\components\\Route\\Private\\Private.js",[],"D:\\reihan-agam\\react-js\\hiring-channel\\src\\components\\Company\\Company.js",[],"D:\\reihan-agam\\react-js\\hiring-channel\\src\\components\\Company\\CompanyProfile\\CompanyProfile.js",[],"D:\\reihan-agam\\react-js\\hiring-channel\\src\\components\\Company\\CompanyProfile\\ProfileEdit\\ProfileEdit.js",[],"D:\\reihan-agam\\react-js\\hiring-channel\\src\\components\\Engineer\\Engineer.js",[],"D:\\reihan-agam\\react-js\\hiring-channel\\src\\components\\Auth\\Register.js",["345","346","347"],"import React, { useState } from \"react\"\r\nimport { Link, Redirect } from \"react-router-dom\"\r\nimport PlacesAutocomplete, { geocodeByAddress } from \"react-places-autocomplete\"\r\nimport { Button, InputLabel, Grid, Avatar, Badge, FormControl, makeStyles, TextField, MenuItem, Select, Typography } from \"@material-ui/core\"\r\nimport { connect } from \"react-redux\"\r\nimport { registerEngineer, registerCompany } from \"../../actions/auth\"\r\nimport { isImage, bytesToSize, validateEmail, Toast } from \"../../utils/helper\"\r\nimport CreateOutlinedIcon from \"@material-ui/icons/CreateOutlined\"\r\nimport Swal from \"sweetalert2\"\r\nimport MaskedInput from \"react-text-mask\"\r\nimport \"react-dropdown/style.css\"\r\n\r\nconst renderFunction = ({ getInputProps, suggestions, getSuggestionItemProps }) => (\r\n  <div>\r\n    <TextField {...getInputProps()} margin=\"normal\" variant=\"outlined\" label=\"* Company Location\" fullWidth />\r\n    <div className=\"autocomplete-dropdown-container\">\r\n      {suggestions.map((suggestion, i) => {\r\n        const className = suggestion.active ? \"suggestion-item--active\" : \"suggestion-item\"\r\n        const style = suggestion.active ? { backgroundColor: \"#fafafa\", cursor: \"pointer\" } : { backgroundColor: \"#ffffff\", cursor: \"pointer\" }\r\n        return (\r\n          <div\r\n            {...getSuggestionItemProps(suggestion, {\r\n              className,\r\n              style\r\n            })}\r\n            key={i}\r\n          >\r\n            <span\r\n              style={{\r\n                backgroundColor: \"#ea80fc\",\r\n                display: \"inline-block\",\r\n                height: \"200\",\r\n                padding: \"8px\",\r\n                color: \"white\"\r\n              }}\r\n            >\r\n              {suggestion.description}\r\n            </span>\r\n          </div>\r\n        )\r\n      })}\r\n    </div>\r\n  </div>\r\n)\r\nconst Register = ({ registerEngineer, registerCompany, isAuthenticated, history }) => {\r\n  const [role, setRole] = useState(1)\r\n  const onChangeRole = element => {\r\n    setRole(element.target.value)\r\n  }\r\n  if (isAuthenticated) {\r\n    return <Redirect to=\"/\" />\r\n  }\r\n  const EngineerInput = () => {\r\n    const [formData, setFormData] = useState({\r\n      fullname: \"\",\r\n      nickname: \"\",\r\n      email: \"\",\r\n      password: \"\"\r\n    })\r\n    const { fullname, nickname, email, password } = formData\r\n    const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value })\r\n    const onSubmit = async e => {\r\n      e.preventDefault()\r\n      try {\r\n        if (fullname.trim() === \"\") {\r\n          throw new Error(\"Fullname Required\")\r\n        }\r\n        if (nickname.trim() === \"\") {\r\n          throw new Error(\"Nickname Required\")\r\n        }\r\n        if (email.trim() === \"\") {\r\n          throw new Error(\"Email Required\")\r\n        }\r\n        if (validateEmail(email)) {\r\n          throw new Error(\"Invalid Email. e.g : johndoe@gmail.com\")\r\n        }\r\n        if (password.trim() === \"\") {\r\n          throw new Error(\"Password Required\")\r\n        }\r\n        if (password.length < 6) {\r\n          throw new Error(\"Password Minimum 6 Character\")\r\n        }\r\n        if (typeof role === \"undefined\") {\r\n          throw new Error(\"Role Required\")\r\n        }\r\n        let fd = new FormData()\r\n        fd.set(\"fullname\", fullname)\r\n        fd.set(\"nickname\", nickname)\r\n        fd.set(\"email\", email)\r\n        fd.set(\"role\", role)\r\n        await registerEngineer(fd, history)\r\n      } catch (error) {\r\n        Toast.fire({\r\n          icon: \"error\",\r\n          title: error.message\r\n        })\r\n      }\r\n    }\r\n    return (\r\n      <form onSubmit={event => onSubmit(event)}>\r\n        <TextField onChange={onChange} value={fullname} name=\"fullname\" margin=\"normal\" variant=\"outlined\" label=\"Fullname\" fullWidth />\r\n        <TextField onChange={onChange} value={nickname} name=\"nickname\" margin=\"normal\" variant=\"outlined\" label=\"Nickname\" fullWidth />\r\n        <TextField onChange={onChange} value={email} name=\"email\" margin=\"normal\" variant=\"outlined\" label=\"Email\" fullWidth />\r\n        <TextField onChange={onChange} value={password} name=\"password\" margin=\"normal\" variant=\"outlined\" label=\"Password\" type=\"password\" fullWidth />\r\n        <div className=\"margin-normal\">\r\n          <Button style={{ margin: 0 }} type=\"submit\" variant=\"contained\" color=\"primary\" fullWidth>\r\n            Register\r\n          </Button>\r\n        </div>\r\n        <div className=\"margin-normal\">\r\n          <Button style={{ margin: 0 }} type=\"button\" variant=\"contained\" color=\"primary\" component={Link} to=\"/\" fullWidth>\r\n            Back\r\n          </Button>\r\n        </div>\r\n      </form>\r\n    )\r\n  }\r\n  const CompanyInput = () => {\r\n    let fileRef\r\n    const [formData, setFormData] = useState({\r\n      fullname: \"\",\r\n      nickname: \"\",\r\n      companyname: \"\",\r\n      companyemail: \"\",\r\n      companytelp: \"\",\r\n      companydesc: \"\",\r\n      email: \"\",\r\n      password: \"\"\r\n    })\r\n    const useStyles = makeStyles(theme => ({\r\n      root: {\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        \"& > *\": {\r\n          margin: theme.spacing(0.5)\r\n        }\r\n      },\r\n      chip: {\r\n        \"& > *\": {\r\n          margin: theme.spacing(0.5)\r\n        }\r\n      },\r\n      small: {\r\n        width: theme.spacing(3),\r\n        height: theme.spacing(3)\r\n      },\r\n      large: {\r\n        width: theme.spacing(10),\r\n        height: theme.spacing(10)\r\n      }\r\n    }))\r\n    const classes = useStyles()\r\n    const [logoFile, setLogoFile] = useState(\"\")\r\n    const [logoDefault, setDefaultLogo] = useState(\"\")\r\n    const [companylocation, setCompanyLocation] = useState(\"\")\r\n    const handleFile = _ => {\r\n      fileRef.click()\r\n    }\r\n    const handleAvatar = async e => {\r\n      if (e.target.files && e.target.files[0]) {\r\n        let size = bytesToSize(e.target.files[0].size)\r\n        let extension = e.target.files[0].name.split(\".\").pop()\r\n        let reader = new FileReader()\r\n        try {\r\n          if (size > process.env.REACT_APP_SIZE_IMAGE) {\r\n            throw new Error(\"File size cannot larger than 1MB\")\r\n          }\r\n          if (!isImage(extension)) {\r\n            throw new Error(\"File type allowed: PNG, JPG, JPEG, GIF, SVG, BMP\")\r\n          }\r\n          setLogoFile(e.target.files[0])\r\n          reader.onload = e => {\r\n            setDefaultLogo(e.target.result)\r\n          }\r\n          reader.onprogress = e => {\r\n            const percent = (e.loaded / e.total) * 100\r\n            console.log(`Progress: ${Math.round(percent)}`)\r\n          }\r\n          reader.readAsDataURL(e.target.files[0])\r\n        } catch (err) {\r\n          Toast.fire({\r\n            icon: \"error\",\r\n            title: err.message\r\n          })\r\n        }\r\n      }\r\n    }\r\n    const onChangeLocation = address => {\r\n      setCompanyLocation(address)\r\n    }\r\n    const handleSelectLocation = async address => {\r\n      try {\r\n        const results = await geocodeByAddress(address)\r\n        setCompanyLocation(results[0].formatted_address)\r\n      } catch (err) {\r\n        console.log(err)\r\n      }\r\n    }\r\n    const { fullname, nickname, companyname, companyemail, companytelp, companydesc, email, password } = formData\r\n    const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value })\r\n    const onSubmit = async e => {\r\n      e.preventDefault()\r\n      try {\r\n        if (fullname.trim() === \"\") {\r\n          throw new Error(\"Fullname Required\")\r\n        }\r\n        if (nickname.trim() === \"\") {\r\n          throw new Error(\"Nickname Required\")\r\n        }\r\n        if (email.trim() === \"\") {\r\n          throw new Error(\"Email Required\")\r\n        }\r\n        if (logoFile === \"\") {\r\n          throw new Error(\"Logo Required\")\r\n        }\r\n        if (validateEmail(email)) {\r\n          throw new Error(\"Invalid Email. e.g : johndoe@gmail.com\")\r\n        }\r\n        if (password.trim() === \"\") {\r\n          throw new Error(\"Password Required\")\r\n        }\r\n        if (password.length < 6) {\r\n          throw new Error(\"Password Minimum 6 Character\")\r\n        }\r\n        if (companyname.trim() === \"\") {\r\n          throw new Error(\"Company Name Required\")\r\n        }\r\n        if (companyemail.trim() === \"\") {\r\n          throw new Error(\"Company Email Required\")\r\n        }\r\n        if (companydesc.trim() === \"\") {\r\n          throw new Error(\"Company Description required\")\r\n        }\r\n        if (companytelp.trim() === \"\") {\r\n          throw new Error(\"Company Telephone Required\")\r\n        }\r\n        if (companylocation.trim() === \"\") {\r\n          throw new Error(\"Company Location required\")\r\n        }\r\n        if (typeof role === \"undefined\") {\r\n          throw new Error(\"Role Required\")\r\n        }\r\n        let fd = new FormData()\r\n        fd.set(\"fullname\", fullname)\r\n        fd.set(\"nickname\", nickname)\r\n        fd.set(\"email\", email)\r\n        fd.set(\"password\", password)\r\n        fd.set(\"logo\", logoFile)\r\n        fd.set(\"role\", role)\r\n        fd.set(\"companyname\", companyname)\r\n        fd.set(\"companyemail\", companyemail)\r\n        fd.set(\"companytelp\", companytelp)\r\n        fd.set(\"companydesc\", companydesc)\r\n        fd.set(\"companylocation\", companylocation)\r\n        await registerCompany(fd, history)\r\n      } catch (error) {\r\n        Toast.fire({\r\n          icon: \"error\",\r\n          title: error.message\r\n        })\r\n      }\r\n    }\r\n    return (\r\n      <form onSubmit={event => onSubmit(event)}>\r\n        <TextField onChange={onChange} value={fullname} name=\"fullname\" margin=\"normal\" variant=\"outlined\" label=\"User Fullname\" fullWidth />\r\n        <TextField onChange={onChange} value={nickname} name=\"nickname\" margin=\"normal\" variant=\"outlined\" label=\"User Nickname\" fullWidth />\r\n        <TextField onChange={onChange} value={email} name=\"email\" margin=\"normal\" variant=\"outlined\" label=\"User Email\" fullWidth />\r\n        <Grid container className=\"my-5\" direction=\"column\" justify=\"center\" alignItems=\"center\">\r\n          <Badge\r\n            overlap=\"circle\"\r\n            anchorOrigin={{\r\n              vertical: \"bottom\",\r\n              horizontal: \"right\"\r\n            }}\r\n            badgeContent={\r\n              <Grid\r\n                item\r\n                className=\"p-1 rounded\"\r\n                style={{\r\n                  backgroundColor: \"#ea80fc\"\r\n                }}\r\n              >\r\n                <CreateOutlinedIcon\r\n                  onClick={handleFile}\r\n                  className=\"text-white\"\r\n                  style={{\r\n                    cursor: \"pointer\"\r\n                  }}\r\n                />\r\n                <input ref={input => (fileRef = input)} onChange={handleAvatar} style={{ display: \"none\" }} type=\"file\" />\r\n              </Grid>\r\n            }\r\n          >\r\n            <Avatar className={classes.large} alt={fullname} src={`${logoDefault}`} />\r\n          </Badge>\r\n        </Grid>\r\n        <TextField onChange={onChange} value={companyname} name=\"companyname\" margin=\"normal\" variant=\"outlined\" label=\"* Company Name\" fullWidth />\r\n        <TextField onChange={onChange} value={companyemail} name=\"companyemail\" margin=\"normal\" variant=\"outlined\" label=\"* Company Email\" fullWidth />\r\n        <MaskedInput mask={[\"(\", /[1-9]/, /\\d/, /\\d/, \")\", \" \", /\\d/, /\\d/, /\\d/, /\\d/, \"-\", /\\d/, /\\d/, /\\d/, /\\d/]} placeholderChar={\"_\"} onChange={e => onChange(e)} render={(ref, props) => <TextField value={companytelp} name=\"companytelp\" margin=\"normal\" variant=\"outlined\" label=\"* Company Telp\" fullWidth inputRef={ref} {...props} />} />\r\n        <TextField onChange={onChange} value={companydesc} multiline rows=\"4\" name=\"companydesc\" margin=\"normal\" variant=\"outlined\" label=\"* Company Description\" fullWidth />\r\n        <PlacesAutocomplete onChange={onChangeLocation} value={companylocation} onSelect={handleSelectLocation}>\r\n          {renderFunction}\r\n        </PlacesAutocomplete>\r\n        <TextField onChange={onChange} value={password} name=\"password\" margin=\"normal\" variant=\"outlined\" label=\"Password\" type=\"password\" fullWidth />\r\n        <div className=\"margin-normal\">\r\n          <Button style={{ margin: 0 }} type=\"submit\" variant=\"contained\" color=\"primary\" fullWidth>\r\n            Register\r\n          </Button>\r\n        </div>\r\n        <div className=\"margin-normal\">\r\n          <Button style={{ margin: 0 }} type=\"button\" variant=\"contained\" color=\"primary\" component={Link} to=\"/\" fullWidth>\r\n            Back\r\n          </Button>\r\n        </div>\r\n      </form>\r\n    )\r\n  }\r\n  return (\r\n    <div className=\"columns justify-center min-h-screen\">\r\n      <div className=\"column marginless\" id=\"cover-background-register\">\r\n        <div id=\"cover-register\"></div>\r\n        <h2 className=\"title mx-3 text-white\">Hire expert freelancers for any job, online</h2>\r\n        <h3 className=\"sub-title mx-3 text-white\">Millions of small businesses use Frelancer to turn their ideas into reality.</h3>\r\n      </div>\r\n      <div className=\"column\">\r\n        <Typography variant=\"h5\" component=\"h5\" gutterBottom>\r\n          Register\r\n        </Typography>\r\n        <FormControl margin=\"normal\" variant=\"outlined\" fullWidth>\r\n          <InputLabel htmlFor=\"outlined-role\">Select your Role</InputLabel>\r\n          <Select\r\n            inputProps={{\r\n              name: \"role\",\r\n              id: \"outlined-role\"\r\n            }}\r\n            value={role}\r\n            label=\"Select your Role\"\r\n            onChange={e => onChangeRole(e)}\r\n          >\r\n            <MenuItem value={1}>Engineer</MenuItem>\r\n            <MenuItem value={2}>Company</MenuItem>\r\n          </Select>\r\n        </FormControl>\r\n        {role == 1 && <EngineerInput />}\r\n        {role == 2 && <CompanyInput />}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: state.auth.isAuthenticated\r\n})\r\nexport default connect(mapStateToProps, { registerEngineer, registerCompany })(Register)\r\n","D:\\reihan-agam\\react-js\\hiring-channel\\src\\components\\Layouts\\Page404.js",[],"D:\\reihan-agam\\react-js\\hiring-channel\\src\\components\\Auth\\Login.js",[],"D:\\reihan-agam\\react-js\\hiring-channel\\src\\components\\Engineer\\EngineerProfile\\ProfileEdit\\ProfileEdit.js",[],"D:\\reihan-agam\\react-js\\hiring-channel\\src\\components\\Engineer\\EngineerProfile\\EngineerProfile.js",[],"D:\\reihan-agam\\react-js\\hiring-channel\\src\\components\\Company\\CompanyList\\CompanyList.js",[],"D:\\reihan-agam\\react-js\\hiring-channel\\src\\components\\Engineer\\EngineerList\\EngineerList.js",[],"D:\\reihan-agam\\react-js\\hiring-channel\\src\\components\\Layouts\\PageEmpty.js",[],"D:\\reihan-agam\\react-js\\hiring-channel\\src\\components\\Engineer\\EngineerItem\\EngineerItem.js",[],"D:\\reihan-agam\\react-js\\hiring-channel\\src\\components\\Engineer\\EngineerProfile\\ProfileSkillsItem\\ProfileSkillsItem.js",[],"D:\\reihan-agam\\react-js\\hiring-channel\\src\\components\\Engineer\\EngineerProfile\\ProfileShow\\ProfileShow.js",[],"D:\\reihan-agam\\react-js\\hiring-channel\\src\\components\\Engineer\\EngineerProfile\\ProfileShow\\ProfileShowItem\\ProfileShowItem.js",["348"],"import React, { useState, useEffect, useRef } from \"react\"\r\nimport { Container, Grid, Badge, Paper, Button, Modal, Input, makeStyles } from \"@material-ui/core\"\r\nimport { Link } from \"react-router-dom\"\r\nimport * as moment from \"moment\"\r\nimport Pusher from \"pusher-js\"\r\nimport { withStyles } from \"@material-ui/core/styles\"\r\nimport PersonIcon from \"@material-ui/icons/Person\"\r\nimport EmailIcon from \"@material-ui/icons/Email\"\r\nimport CakeIcon from \"@material-ui/icons/Cake\"\r\nimport PhoneIcon from \"@material-ui/icons/Phone\"\r\nimport LocationOnIcon from \"@material-ui/icons/LocationOn\"\r\nimport SlideshowIcon from \"@material-ui/icons/Slideshow\"\r\nimport MessageIcon from \"@material-ui/icons/Message\"\r\nimport AvatarComponent from \"../../../../Avatar/Avatar\"\r\nimport ConversationLists from \"../ConversationLists/ConversationLists\"\r\nimport MessageLists from \"../MessageLists/MessageLists\"\r\nimport ProfileSkillsItem from \"../../ProfileSkillsItem/ProfileSkillsItem\"\r\n\r\nconst ProfileShowItem = ({ engineer, user, replies, getConversationLists, getReplyConversationReplies, conversationLists, changesReplyToRealtime, getCheckConversations, checkConversations, InsertIntoConversationReplies }) => {\r\n  const messagesEndRef = useRef(null)\r\n  const [open, setOpen] = useState(false)\r\n  const [inputMessage, setInputMessage] = useState(\"\")\r\n  useEffect(() => {\r\n    const pusher = new Pusher(\"f0c968ffa2c271711c29\", {\r\n      cluster: \"ap1\",\r\n      forceTLS: true\r\n    })\r\n    const fetchData = async () => {\r\n      await getConversationLists(engineer.user_uid)\r\n      await getCheckConversations(engineer.user_uid)\r\n      await getReplyConversationReplies(checkConversations)\r\n    }\r\n    fetchData()\r\n    const channel = pusher.subscribe(\"my-channel\")\r\n    channel.bind(\"my-event\", async data => {\r\n      try {\r\n        await changesReplyToRealtime(data)\r\n      } catch (err) {\r\n        console.log(err)\r\n      } finally {\r\n        if (messagesEndRef.current !== null) {\r\n          messagesEndRef.current.scrollTop = messagesEndRef.current.scrollHeight\r\n        }\r\n      }\r\n    })\r\n    return () => {\r\n      channel.unbind(\"my-event\")\r\n      channel.unsubscribe(\"my-channel\")\r\n    }\r\n  }, [engineer, changesReplyToRealtime, checkConversations, getCheckConversations, getConversationLists, getReplyConversationReplies])\r\n\r\n  const StyledBadge = withStyles(theme => ({\r\n    badge: {\r\n      right: 8,\r\n      top: 8,\r\n      fontSize: 14,\r\n      backgroundColor: \"#ff002a\",\r\n      overlap: \"circle\",\r\n      borderRadius: \"50%\",\r\n      border: `2px solid ${theme.palette.background.paper}`,\r\n      padding: \"14px 10px\"\r\n    }\r\n  }))(Badge)\r\n  const useStyles = makeStyles(theme => ({\r\n    root: {\r\n      flexGrow: 1\r\n    },\r\n    paper: {\r\n      padding: theme.spacing(2)\r\n    }\r\n  }))\r\n  const classes = useStyles()\r\n  const toggleMsgOpen = async () => {\r\n    await getConversationLists(engineer.user_uid)\r\n    setOpen(!open)\r\n  }\r\n  const handleMessage = event => {\r\n    setInputMessage(event.target.value)\r\n  }\r\n  const handleEnterMessage = async event => {\r\n    let data = {\r\n      id: new Date(),\r\n      reply: inputMessage,\r\n      createdAt: moment().format(\"YYYY-MM-DD HH:mm:ss\")\r\n    }\r\n    if (event.which === 13) {\r\n      try {\r\n        await InsertIntoConversationReplies(engineer.user_uid, data)\r\n      } catch (err) {\r\n        console.log(err)\r\n      } finally {\r\n        messagesEndRef.current.scrollTop = messagesEndRef.current.scrollHeight\r\n        setInputMessage(\"\")\r\n      }\r\n    }\r\n  }\r\n  return (\r\n    <div>\r\n      <div className=\"backdrop-top\"></div>\r\n      <Container className=\"mt-64\" fixed>\r\n        <div className={classes.root}>\r\n          <Grid container spacing={4}>\r\n            <Grid item md={4} xs={12}>\r\n              <Paper className={classes.paper}>\r\n                <Grid container>\r\n                  <Grid item xs={6} md={6}>\r\n                    <AvatarComponent imageSource={engineer.avatar} altName={engineer.name} type=\"engineers\" width=\"80\" height=\"80\" spaceBottom=\"20\" />\r\n                  </Grid>\r\n                  <Grid item xs={6} md={4}>\r\n                    {/* <StyledBadge badgeContent={4} color=\"secondary\"> */}\r\n                    <Button variant=\"contained\" color=\"primary\" onClick={toggleMsgOpen} startIcon={<MessageIcon />}>\r\n                      Messages\r\n                    </Button>\r\n                    {/* </StyledBadge> */}\r\n                    <Modal open={open} onClose={toggleMsgOpen}>\r\n                      <Paper className=\"p-5 conversation-lists\">\r\n                        {user.uid !== engineer.user_uid && (\r\n                          <div className=\"p-5 relative container-direct-message\">\r\n                            <MessageLists replies={replies} userGuestUid={engineer.user_uid} messagesEndRef={messagesEndRef} />\r\n                            <div className=\"bar-bottom-message p-2\">\r\n                              <Input fullWidth name=\"message\" value={inputMessage} onChange={handleMessage} onKeyPress={handleEnterMessage} />\r\n                            </div>\r\n                          </div>\r\n                        )}\r\n                        {user.uid === engineer.user_uid && (\r\n                          <div>\r\n                            {conversationLists.length === 0 && <p className=\"center\">No conversations.</p>}\r\n                            <ConversationLists getCheckConversations={getCheckConversations} conversationLists={conversationLists} />\r\n                          </div>\r\n                        )}\r\n                      </Paper>\r\n                    </Modal>\r\n                  </Grid>\r\n                </Grid>\r\n                <Grid container>\r\n                  <Grid item md={2} xs={2}>\r\n                    <PersonIcon />\r\n                  </Grid>\r\n                  <Grid item md={10} xs={10}>\r\n                    <p>{engineer.fullname}</p>\r\n                  </Grid>\r\n                </Grid>\r\n                <Grid container>\r\n                  <Grid item md={2} xs={2}>\r\n                    <EmailIcon />\r\n                  </Grid>\r\n                  <Grid item md={10} xs={10}>\r\n                    <p> {engineer.email} </p>\r\n                  </Grid>\r\n                </Grid>\r\n                <Grid container>\r\n                  <Grid item md={2} xs={2}>\r\n                    <CakeIcon />\r\n                  </Grid>\r\n                  <Grid item md={10} xs={10}>\r\n                    <p> {moment(engineer.birthdate).format(\"D MMMM YYYY\")} </p>\r\n                  </Grid>\r\n                </Grid>\r\n                <Grid container>\r\n                  <Grid item md={2} xs={2}>\r\n                    <LocationOnIcon />\r\n                  </Grid>\r\n                  <Grid item md={10} xs={10}>\r\n                    <p className=\"leading-loose\"> {engineer.location} </p>\r\n                  </Grid>\r\n                </Grid>\r\n                <Grid container>\r\n                  <Grid item md={2} xs={2}>\r\n                    <PhoneIcon />\r\n                  </Grid>\r\n                  <Grid item md={10} xs={10}>\r\n                    <p> {engineer.telephone} </p>\r\n                  </Grid>\r\n                </Grid>\r\n                <Grid container>\r\n                  <Grid item md={2} xs={2}>\r\n                    <SlideshowIcon />\r\n                  </Grid>\r\n                  <Grid item md={10} xs={10}>\r\n                    <p> {engineer.showcase} </p>\r\n                  </Grid>\r\n                </Grid>\r\n                <Button type=\"button\" variant=\"contained\" color=\"primary\" component={Link} to=\"/engineers\">\r\n                  Back\r\n                </Button>\r\n              </Paper>\r\n            </Grid>\r\n            <Grid item md={4} xs={12}>\r\n              <Paper className={classes.paper}>\r\n                <p> {engineer.description} </p>\r\n              </Paper>\r\n            </Grid>\r\n            <Grid item md={4} xs={12}>\r\n              <Paper className={classes.paper}>\r\n                <p className=\"mb-2\">\r\n                  skills\r\n                  <ProfileSkillsItem items={engineer.skills} />\r\n                </p>\r\n              </Paper>\r\n              <div className=\"mt-6\">\r\n                <Paper className={classes.paper}>\r\n                  <p className=\"mb-2\">Expected Salary</p>\r\n                  <p>{engineer.salary}</p>\r\n                </Paper>\r\n              </div>\r\n            </Grid>\r\n          </Grid>\r\n        </div>\r\n      </Container>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProfileShowItem\r\n","D:\\reihan-agam\\react-js\\hiring-channel\\src\\components\\Engineer\\EngineerProfile\\ProfileShow\\ConversationLists\\ConversationLists.js",[],"D:\\reihan-agam\\react-js\\hiring-channel\\src\\components\\Engineer\\EngineerProfile\\ProfileShow\\MessageLists\\MessageLists.js",[],"D:\\reihan-agam\\react-js\\hiring-channel\\src\\components\\Avatar\\Avatar.js",[],"D:\\reihan-agam\\react-js\\hiring-channel\\src\\components\\Layouts\\Header.js",["349","350"],"import React, { useState, useEffect } from \"react\"\r\nimport { connect } from \"react-redux\"\r\nimport { Link, withRouter } from \"react-router-dom\"\r\nimport { AppBar, Toolbar, InputBase, IconButton, Menu, MenuItem, fade, makeStyles } from \"@material-ui/core\"\r\nimport { logout } from \"../../actions/auth\"\r\nimport { getCurrentProfileCompany } from \"../../actions/company\"\r\nimport { getCurrentProfileEngineer } from \"../../actions/engineer\"\r\nimport AvatarComponent from \"../Avatar/Avatar\"\r\nimport SearchIcon from \"@material-ui/icons/Search\"\r\nconst Header = ({ engineer, company, location, logout, user, isAuthenticated, getCurrentProfileEngineer, getCurrentProfileCompany, handleSearchEngineer, handleSearchCompany, querySearchEngineer, querySearchCompany }) => {\r\n  const logoutUser = () => {\r\n    logout()\r\n    handleMenuClose()\r\n  }\r\n  const useStyles = makeStyles(theme => ({\r\n    grow: {\r\n      flexGrow: 1\r\n    },\r\n    menuButton: {\r\n      marginRight: theme.spacing(2)\r\n    },\r\n    large: {\r\n      width: theme.spacing(4),\r\n      height: theme.spacing(4)\r\n    },\r\n    title: {\r\n      display: \"none\",\r\n      [theme.breakpoints.up(\"sm\")]: {\r\n        display: \"block\"\r\n      }\r\n    },\r\n    search: {\r\n      position: \"relative\",\r\n      borderRadius: theme.shape.borderRadius,\r\n      backgroundColor: fade(theme.palette.common.white, 0.15),\r\n      \"&:hover\": {\r\n        backgroundColor: fade(theme.palette.common.white, 0.25)\r\n      },\r\n      marginRight: theme.spacing(2),\r\n      marginLeft: 0,\r\n      width: \"100%\",\r\n      [theme.breakpoints.up(\"sm\")]: {\r\n        marginLeft: theme.spacing(3),\r\n        width: \"auto\"\r\n      }\r\n    },\r\n    searchIcon: {\r\n      width: theme.spacing(7),\r\n      height: \"100%\",\r\n      position: \"absolute\",\r\n      pointerEvents: \"none\",\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      justifyContent: \"center\"\r\n    },\r\n    inputRoot: {\r\n      color: \"inherit\"\r\n    },\r\n    inputInput: {\r\n      padding: theme.spacing(1, 1, 1, 7),\r\n      transition: theme.transitions.create(\"width\"),\r\n      width: \"100%\",\r\n      [theme.breakpoints.up(\"md\")]: {\r\n        width: 200\r\n      }\r\n    },\r\n    sectionDesktop: {\r\n      display: \"none\",\r\n      [theme.breakpoints.up(\"md\")]: {\r\n        display: \"flex\"\r\n      }\r\n    },\r\n    sectionMobile: {\r\n      display: \"flex\",\r\n      [theme.breakpoints.up(\"md\")]: {\r\n        display: \"none\"\r\n      }\r\n    }\r\n  }))\r\n  const userRole = typeof user !== \"undefined\" && user && user.role\r\n  const classes = useStyles()\r\n  const [anchorEl, setAnchorEl] = useState(null)\r\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = useState(null)\r\n  const menuId = \"primary-search-account-menu\"\r\n  const isMenuOpen = Boolean(anchorEl)\r\n  const handleProfileMenuOpen = event => {\r\n    setAnchorEl(event.currentTarget)\r\n  }\r\n  const handleMenuClose = () => {\r\n    setAnchorEl(null)\r\n  }\r\n  const renderMenu = (\r\n    <Menu keepMounted elevation={1} anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }} transformOrigin={{ vertical: \"top\", horizontal: \"right\" }} anchorEl={anchorEl} id={menuId} open={isMenuOpen} onClose={handleMenuClose}>\r\n      {userRole === 1 && (\r\n        <div>\r\n          <MenuItem className=\"text-black\" component={Link} to=\"/engineers/profile\">\r\n            Profile\r\n          </MenuItem>\r\n          <MenuItem className=\"text-black\" component={Link} to=\"/engineers/profile/me/edit\">\r\n            Edit Profile\r\n          </MenuItem>\r\n        </div>\r\n      )}\r\n      {userRole === 2 && (\r\n        <div>\r\n          <MenuItem className=\"text-black\" component={Link} to=\"/companies/profile\">\r\n            Profile\r\n          </MenuItem>\r\n          <MenuItem className=\"text-black\" component={Link} to=\"/companies/add-jobs\">\r\n            Add Jobs\r\n          </MenuItem>\r\n          <MenuItem className=\"text-black\" component={Link} to=\"/companies/profile/me/edit\">\r\n            Edit User Profile\r\n          </MenuItem>\r\n        </div>\r\n      )}\r\n      <MenuItem onClick={logoutUser}>Logout</MenuItem>\r\n    </Menu>\r\n  )\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      if (userRole === 1) {\r\n        await getCurrentProfileEngineer()\r\n      }\r\n      if (userRole === 2) {\r\n        await getCurrentProfileCompany()\r\n      }\r\n    }\r\n    fetchData()\r\n  }, [getCurrentProfileEngineer, getCurrentProfileCompany, userRole])\r\n  const authLinks = (\r\n    <div className={classes.grow}>\r\n      <AppBar elevation={1} color=\"transparent\" position=\"static\">\r\n        <Toolbar>\r\n          <div className={classes.grow}>\r\n            <img className=\"logo\" src=\"./images/logo.png\" alt=\"My Logo\" />\r\n          </div>\r\n          {location.pathname === \"/engineers\" && (\r\n            <div className={classes.search}>\r\n              <div className={classes.searchIcon}>\r\n                <SearchIcon />\r\n              </div>\r\n              <InputBase\r\n                placeholder=\"Search name here...\"\r\n                inputProps={{ \"aria-label\": \"search\" }}\r\n                classes={{\r\n                  root: classes.inputRoot,\r\n                  input: classes.inputInput\r\n                }}\r\n                onChange={event => handleSearchEngineer(event.target.value)}\r\n              />\r\n            </div>\r\n          )}\r\n          {location.pathname === \"/companies\" && (\r\n            <div className={classes.search}>\r\n              <div className={classes.searchIcon}>\r\n                <SearchIcon />\r\n              </div>\r\n              <InputBase\r\n                placeholder=\"Search name here...\"\r\n                inputProps={{ \"aria-label\": \"search\" }}\r\n                classes={{\r\n                  root: classes.inputRoot,\r\n                  input: classes.inputInput\r\n                }}\r\n                onChange={event => handleSearchCompany(event.target.value)}\r\n              />\r\n            </div>\r\n          )}\r\n          <div className={classes.grow}>\r\n            <Link className=\"text-black mx-3\" to=\"/\">\r\n              Home\r\n            </Link>\r\n            <Link className=\"text-black mx-3\" to=\"/engineers?page=1&show=5&sort=newer&filterby=latest-update\">\r\n              Engineers\r\n            </Link>\r\n            <Link className=\"text-black mx-3\" to=\"/companies?page=1&show=5&sort=newer&filterby=latest-update\">\r\n              Companies\r\n            </Link>\r\n          </div>\r\n          <div className={classes.grow}>\r\n            {userRole === 1 && (\r\n              <span className=\"mx-3 cursor-pointer\" onClick={handleProfileMenuOpen}>\r\n                Hello, {engineer && engineer.fullname}\r\n              </span>\r\n            )}\r\n            {userRole === 2 && (\r\n              <span className=\"mx-3 cursor-pointer\" onClick={handleProfileMenuOpen}>\r\n                Hello, {company && company.username}\r\n              </span>\r\n            )}\r\n            <IconButton edge=\"end\" aria-label=\"account of current user\" aria-haspopup=\"true\" color=\"inherit\" aria-controls={menuId} onClick={handleProfileMenuOpen}>\r\n              {userRole === 1 && <AvatarComponent imageSource={engineer && engineer.avatar} altName={engineer && engineer.nickname} type=\"engineers\" width=\"30\" height=\"30\" />}\r\n              {userRole === 2 && <AvatarComponent imageSource={company && company.logo} altName={company && company.nickname} type=\"companies\" width=\"30\" height=\"30\" />}\r\n            </IconButton>\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n      {renderMenu}\r\n    </div>\r\n  )\r\n  const guestLinks = (\r\n    <div className={classes.grow}>\r\n      <AppBar elevation={1} color=\"transparent\" position=\"static\">\r\n        <Toolbar>\r\n          <div className={classes.grow}>\r\n            <img className=\"logo\" src=\"./images/logo.png\" alt=\"My Logo\" />\r\n          </div>\r\n          {location.pathname === \"/engineers\" && (\r\n            <div className={classes.search}>\r\n              <div className={classes.searchIcon}>\r\n                <SearchIcon />\r\n              </div>\r\n              <InputBase\r\n                placeholder=\"Search name here...\"\r\n                inputProps={{ \"aria-label\": \"search\" }}\r\n                classes={{\r\n                  root: classes.inputRoot,\r\n                  input: classes.inputInput\r\n                }}\r\n                onChange={event => handleSearchEngineer(event.target.value)}\r\n              />\r\n            </div>\r\n          )}\r\n          {location.pathname === \"/companies\" && (\r\n            <div className={classes.search}>\r\n              <div className={classes.searchIcon}>\r\n                <SearchIcon />\r\n              </div>\r\n              <InputBase\r\n                placeholder=\"Search name or location here...\"\r\n                inputProps={{ \"aria-label\": \"search\" }}\r\n                classes={{\r\n                  root: classes.inputRoot,\r\n                  input: classes.inputInput\r\n                }}\r\n                onChange={event => handleSearchCompany(event.target.value)}\r\n              />\r\n            </div>\r\n          )}\r\n          <div className={classes.grow}>\r\n            <Link className=\"text-black mx-3\" to=\"/\">\r\n              Home\r\n            </Link>\r\n            <Link className=\"text-black mx-3\" to=\"/engineers?page=1&show=5&sort=newer&filterby=latest-update\">\r\n              Engineers\r\n            </Link>\r\n            <Link className=\"text-black mx-3\" to=\"/companies?page=1&show=5&sort=newer&filterby=latest-update\">\r\n              Companies\r\n            </Link>\r\n            <Link className=\"text-black mx-3\" to=\"/login\">\r\n              Login\r\n            </Link>\r\n            <Link className=\"text-black mx-3\" to=\"/register\">\r\n              Register\r\n            </Link>\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n      {renderMenu}\r\n    </div>\r\n  )\r\n  return <>{isAuthenticated ? authLinks : guestLinks}</>\r\n}\r\nconst mapStateToProps = state => ({\r\n  engineer: state.engineer.engineer,\r\n  company: state.company.company,\r\n  isAuthenticated: state.auth.isAuthenticated,\r\n  user: state.auth.user\r\n})\r\nexport default connect(mapStateToProps, { getCurrentProfileEngineer, getCurrentProfileCompany, logout })(withRouter(Header))\r\n","D:\\reihan-agam\\react-js\\hiring-channel\\src\\components\\Layouts\\Footer.js",[],"D:\\reihan-agam\\react-js\\hiring-channel\\src\\components\\Layouts\\HeaderFilter.js",[],"D:\\reihan-agam\\react-js\\hiring-channel\\src\\components\\Engineer\\EngineerProfile\\ProfileEdit\\ProfileEditItem\\ProfileEditItem.js",[],"D:\\reihan-agam\\react-js\\hiring-channel\\src\\components\\Engineer\\EngineerProfile\\ProfileItem\\ProfileItem.js",[],"D:\\reihan-agam\\react-js\\hiring-channel\\src\\utils\\helper.js",[],"D:\\reihan-agam\\react-js\\hiring-channel\\src\\components\\Company\\CompanyItem\\CompanyItem.js",["351","352"],"import React from \"react\"\r\nimport { Link } from \"react-router-dom\"\r\nimport { Container, Grid, makeStyles } from \"@material-ui/core\"\r\nimport { Pagination } from \"@material-ui/lab\"\r\nimport ReactHtmlParser from \"react-html-parser\"\r\nimport defaultImage from \"../../../images/default.png\"\r\nimport LazyLoad from \"react-lazy-load\"\r\nimport ProfileSkillsItem from \"../CompanyProfile/ProfileSkillsItem/ProfileSkillsItem\"\r\n\r\nconst CompanyItem = ({ companies, handlePage, currentPage, pageCount }) => {\r\n  const useStyles = makeStyles(theme => ({\r\n    root: {\r\n      \"& > *\": {\r\n        marginBottom: theme.spacing(8)\r\n      }\r\n    }\r\n  }))\r\n  const classes = useStyles()\r\n  return (\r\n    <Container fixed>\r\n      <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\r\n        <div className=\"masonry-container\">\r\n          {companies &&\r\n            companies.map(company => (\r\n              <div className=\"masonry-item text-white\" key={company.uid}>\r\n                <Link className=\"text-white\" to={`companies/detail/${company.slug}`}>\r\n                  <LazyLoad>\r\n                    <img className=\"image rounded\" src={`${process.env.REACT_APP_GET_LOCAL_IMAGES_COMPANY}/${company.logo}`} alt={company.name} />\r\n                  </LazyLoad>\r\n                </Link>\r\n                <div className=\"masonry-description\">\r\n                  <h1 className=\"masonry-job-title mb-1\"> {company.title} </h1>\r\n                  <p className=\"masonry-salary mb-1\"> {company.salary} </p>\r\n                  <p className=\"masonry-content mb-1\">Job description & requirements ..........................</p>\r\n                  <div className=\"mb-1\">\r\n                    Requirements :\r\n                    <ProfileSkillsItem items={company.skills} />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            ))}\r\n        </div>\r\n        <div className={classes.root}>\r\n          <Pagination count={pageCount ?? 0} onChange={(event, page) => handlePage(event, page)} page={currentPage ?? 1} />\r\n        </div>\r\n      </Grid>\r\n    </Container>\r\n  )\r\n}\r\nexport default CompanyItem\r\n","D:\\reihan-agam\\react-js\\hiring-channel\\src\\components\\Company\\CompanyProfile\\ProfileItem\\ProfileItem.js",["353"],"import React from \"react\"\r\nimport { Container, Grid, Paper, Button, Avatar, makeStyles } from \"@material-ui/core\"\r\nimport { Link } from \"react-router-dom\"\r\nimport { Editor } from \"@tinymce/tinymce-react\"\r\nimport { API_KEY_TINYMCE } from \"../../../../configs/constants\"\r\nimport ReactHtmlParser from \"react-html-parser\"\r\nimport AccountBalanceIcon from \"@material-ui/icons/AccountBalance\"\r\nimport EmailIcon from \"@material-ui/icons/Email\"\r\nimport PhoneIcon from \"@material-ui/icons/Phone\"\r\nimport LocationOnIcon from \"@material-ui/icons/LocationOn\"\r\n\r\nconst ProfileItem = ({ company }) => {\r\n  const useStyles = makeStyles(theme => ({\r\n    root: {\r\n      flexGrow: 1\r\n    },\r\n    paper: {\r\n      padding: theme.spacing(2),\r\n      position: \"relative\"\r\n    },\r\n    avatar: {\r\n      width: theme.spacing(10),\r\n      height: theme.spacing(10),\r\n      marginBottom: \"20px\"\r\n    }\r\n  }))\r\n  const classes = useStyles()\r\n  return (\r\n    <div>\r\n      <div className=\"backdrop-top\"></div>\r\n      <Container className=\"mt-64\" fixed>\r\n        <div className={classes.root}>\r\n          <Grid container spacing={3}>\r\n            <Grid item md={4} xs={12}>\r\n              <Paper className={classes.paper}>\r\n                <Avatar className={classes.avatar} src={`${process.env.REACT_APP_GET_LOCAL_IMAGES_COMPANY}/${company.logo}`} alt={company.name} />\r\n                <Grid container>\r\n                  <Grid item md={2} xs={10}>\r\n                    <AccountBalanceIcon />\r\n                  </Grid>\r\n                  <Grid item md={10} xs={10}>\r\n                    <p> {company.name} </p>\r\n                  </Grid>\r\n                </Grid>\r\n                <Grid container>\r\n                  <Grid item md={2} xs={2}>\r\n                    <EmailIcon />\r\n                  </Grid>\r\n                  <Grid item md={10} xs={10}>\r\n                    <p> {company.email} </p>\r\n                  </Grid>\r\n                </Grid>\r\n                <Grid container>\r\n                  <Grid item md={2} xs={2}>\r\n                    <LocationOnIcon />\r\n                  </Grid>\r\n                  <Grid item md={10} xs={10}>\r\n                    <p className=\"leading-loose\"> {company.location === null ? \"\" : company.location} </p>\r\n                  </Grid>\r\n                </Grid>\r\n                <Grid container>\r\n                  <Grid item md={2} xs={2}>\r\n                    <PhoneIcon />\r\n                  </Grid>\r\n                  <Grid item md={10} xs={10}>\r\n                    <p> {company.telephone === null ? \"\" : company.telephone} </p>\r\n                  </Grid>\r\n                </Grid>\r\n                <Grid>\r\n                  <Button type=\"button\" variant=\"contained\" color=\"primary\" component={Link} to=\"/engineers\">\r\n                    Back\r\n                  </Button>\r\n                </Grid>\r\n              </Paper>\r\n            </Grid>\r\n            <Grid item md={4} xs={12}>\r\n              <Paper className={classes.paper}>\r\n                <p> {company.description} </p>\r\n              </Paper>\r\n            </Grid>\r\n            <Grid item md={4} xs={12}>\r\n              <Paper className={classes.paper}>\r\n                <Editor value={company.content} init={{ menubar: false, toolbar: false }} inline={false} disabled={true} apiKey={API_KEY_TINYMCE} />\r\n                {/* <div dangerouslySetInnerHTML={{ __html: company.content }} /> */}\r\n                {/* {ReactHtmlParser(company.content)} */}\r\n              </Paper>\r\n            </Grid>\r\n          </Grid>\r\n        </div>\r\n      </Container>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProfileItem\r\n","D:\\reihan-agam\\react-js\\hiring-channel\\src\\components\\Company\\CompanyProfile\\ProfileEdit\\ProfileEditItem\\ProfileEditItem.js",["354","355","356","357"],"import React, { useEffect, useState } from \"react\"\r\nimport { Link } from \"react-router-dom\"\r\nimport PlacesAutocomplete, { geocodeByAddress } from \"react-places-autocomplete\"\r\nimport { Container, Grid, Button, TextField, Avatar, Badge, makeStyles } from \"@material-ui/core\"\r\nimport { auth, bytesToSize, isImage, Toast } from \"../../../../../utils/helper\"\r\nimport { API_KEY_TINYMCE } from \"../../../../../configs/constants\"\r\nimport { Editor } from \"@tinymce/tinymce-react\"\r\nimport CreateOutlinedIcon from \"@material-ui/icons/CreateOutlined\"\r\nimport MaskedInput from \"react-text-mask\"\r\n\r\nconst renderFunction = ({ getInputProps, suggestions, getSuggestionItemProps }) => (\r\n  <div>\r\n    <TextField {...getInputProps()} margin=\"normal\" variant=\"outlined\" label=\"Location\" fullWidth />\r\n    <div className=\"autocomplete-dropdown-container\">\r\n      {suggestions.map((suggestion, i) => {\r\n        const className = suggestion.active ? \"suggestion-item--active\" : \"suggestion-item\"\r\n        const style = suggestion.active ? { backgroundColor: \"#fafafa\", cursor: \"pointer\" } : { backgroundColor: \"#ffffff\", cursor: \"pointer\" }\r\n        return (\r\n          <div\r\n            {...getSuggestionItemProps(suggestion, {\r\n              className,\r\n              style\r\n            })}\r\n            key={i}\r\n          >\r\n            <span\r\n              style={{\r\n                backgroundColor: \"#ea80fc\",\r\n                display: \"inline-block\",\r\n                height: \"200\",\r\n                padding: \"8px\",\r\n                color: \"white\"\r\n              }}\r\n            >\r\n              {suggestion.description}\r\n            </span>\r\n          </div>\r\n        )\r\n      })}\r\n    </div>\r\n  </div>\r\n)\r\nconst ProfileEditItem = ({ company, update, history }) => {\r\n  let fileRef\r\n  const useStyles = makeStyles(theme => ({\r\n    root: {\r\n      display: \"flex\",\r\n      justifyContent: \"center\",\r\n      alignItems: \"center\",\r\n      \"& > *\": {\r\n        margin: theme.spacing(0.5)\r\n      }\r\n    },\r\n    chip: {\r\n      \"& > *\": {\r\n        margin: theme.spacing(0.5)\r\n      }\r\n    },\r\n    small: {\r\n      width: theme.spacing(3),\r\n      height: theme.spacing(3)\r\n    },\r\n    large: {\r\n      width: theme.spacing(10),\r\n      height: theme.spacing(10)\r\n    }\r\n  }))\r\n  const classes = useStyles()\r\n  const [isOpen, setIsOpen] = useState(false)\r\n  const [location, setLocation] = useState(\"\")\r\n  const [logoNotEdited, setLogoNotEdited] = useState(\"\")\r\n  const [logoDefault, setDefaultLogo] = useState(\"\")\r\n  const [logoFile, setLogoFile] = useState(\"\")\r\n  const [formData, setFormData] = useState({\r\n    uid: \"\",\r\n    name: \"\",\r\n    email: \"\",\r\n    description: \"\",\r\n    telephone: \"\"\r\n  })\r\n\r\n  useEffect(() => {\r\n    setFormData({\r\n      uid: company && company.uid === null ? \"\" : company.uid,\r\n      name: company && company.name === null ? \"\" : company.name,\r\n      email: company && company.email === null ? \"\" : company.email,\r\n      description: company && company.description === null ? \"\" : company.description,\r\n      telephone: company && company.telephone === null ? \"\" : company.telephone\r\n    })\r\n    company && company.location === null ? setLocation(\"\") : setLocation(company.location)\r\n    setDefaultLogo(`${process.env.REACT_APP_GET_LOCAL_IMAGES_COMPANY}/${company.logo}`)\r\n    setLogoNotEdited(company.logo)\r\n  }, [company])\r\n\r\n  const { uid, name, email, description, telephone } = formData\r\n\r\n  const onChange = e => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value })\r\n  }\r\n  const handleChange = address => {\r\n    setLocation(address)\r\n  }\r\n  const handleSelect = async address => {\r\n    try {\r\n      const results = await geocodeByAddress(address)\r\n      setLocation(results[0].formatted_address)\r\n    } catch (err) {\r\n      console.log(err)\r\n    }\r\n  }\r\n  const handleFile = _ => {\r\n    fileRef.click()\r\n  }\r\n  const handleLogo = e => {\r\n    if (e.target.files && e.target.files[0]) {\r\n      let size = bytesToSize(e.target.files[0].size)\r\n      let ext = e.target.files[0].name.split(\".\").pop()\r\n      let reader = new FileReader()\r\n      try {\r\n        if (size > process.env.REACT_APP_IMAGE_SIZE) {\r\n          throw new Error(\"File size cannot larger than 1MB\")\r\n        }\r\n        if (!isImage(ext)) {\r\n          throw new Error(\"File type allowed: PNG, JPG, JPEG, GIF, SVG, BMP\")\r\n        }\r\n        setLogoFile(e.target.files[0])\r\n        reader.onload = e => {\r\n          setDefaultLogo(e.target.result)\r\n        }\r\n        reader.readAsDataURL(e.target.files[0])\r\n      } catch (err) {\r\n        Toast.fire({\r\n          icon: \"error\",\r\n          title: err.message\r\n        })\r\n      }\r\n    }\r\n  }\r\n  const onSubmit = async e => {\r\n    e.preventDefault()\r\n    let logo\r\n    if (logoFile === \"\") {\r\n      logo = logoNotEdited\r\n    } else {\r\n      logo = logoFile\r\n    }\r\n    try {\r\n      let fd = new FormData()\r\n      fd.set(\"uid\", uid)\r\n      fd.set(\"userUid\", auth().uid)\r\n      fd.set(\"logo\", logo)\r\n      fd.set(\"name\", name)\r\n      fd.set(\"email\", email)\r\n      fd.set(\"description\", description)\r\n      fd.set(\"telephone\", telephone)\r\n      fd.set(\"location\", location)\r\n      await update(fd, history)\r\n    } catch (err) {\r\n      Toast.fire({\r\n        icon: \"error\",\r\n        title: err.message\r\n      })\r\n    }\r\n  }\r\n  return (\r\n    <div>\r\n      <Container fixed>\r\n        <Grid container className=\"my-5\" direction=\"row\" justify=\"center\" alignItems=\"center\">\r\n          <Grid className=\"p-5 white rounded\" item md={8} xs={12}>\r\n            <form onSubmit={e => onSubmit(e)}>\r\n              <div className={classes.root}>\r\n                <Badge\r\n                  overlap=\"circle\"\r\n                  anchorOrigin={{\r\n                    vertical: \"bottom\",\r\n                    horizontal: \"right\"\r\n                  }}\r\n                  badgeContent={\r\n                    <Grid\r\n                      item\r\n                      className=\"p-1 rounded\"\r\n                      style={{\r\n                        backgroundColor: \"#ea80fc\"\r\n                      }}\r\n                    >\r\n                      <CreateOutlinedIcon\r\n                        onClick={handleFile}\r\n                        className=\"text-white\"\r\n                        style={{\r\n                          cursor: \"pointer\"\r\n                        }}\r\n                      />\r\n                      <input ref={input => (fileRef = input)} onChange={handleLogo} style={{ display: \"none\" }} type=\"file\" />\r\n                    </Grid>\r\n                  }\r\n                >\r\n                  <Avatar className={classes.large} alt={name} src={`${logoDefault}`} />\r\n                </Badge>\r\n              </div>\r\n              <TextField onChange={onChange} value={name ?? \"\"} name=\"name\" margin=\"normal\" variant=\"outlined\" label=\"Name\" fullWidth />\r\n              <TextField onChange={onChange} value={email ?? \"\"} name=\"email\" margin=\"normal\" variant=\"outlined\" label=\"E-mail Address\" fullWidth disabled />\r\n              <TextField onChange={onChange} value={description ?? \"\"} multiline rows=\"4\" name=\"description\" margin=\"normal\" variant=\"outlined\" label=\"Description\" fullWidth />\r\n              <PlacesAutocomplete value={location ?? \"\"} onChange={handleChange} onSelect={handleSelect}>\r\n                {renderFunction}\r\n              </PlacesAutocomplete>\r\n              <MaskedInput mask={[\"(\", /[1-9]/, /\\d/, /\\d/, \")\", \" \", /\\d/, /\\d/, /\\d/, /\\d/, \"-\", /\\d/, /\\d/, /\\d/, /\\d/]} placeholderChar={\"_\"} onChange={e => onChange(e)} render={(ref, props) => <TextField value={telephone ?? \"\"} name=\"telephone\" margin=\"normal\" variant=\"outlined\" label=\"Telephone\" fullWidth inputRef={ref} {...props} />} />\r\n              <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\r\n                <Button type=\"button\" variant=\"contained\" color=\"primary\" component={Link} to=\"/companies\">\r\n                  Back\r\n                </Button>\r\n                <Button type=\"submit\" variant=\"contained\" color=\"primary\">\r\n                  Update\r\n                </Button>\r\n              </Grid>\r\n            </form>\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProfileEditItem\r\n","D:\\reihan-agam\\react-js\\hiring-channel\\src\\configs\\constants.js",[],"D:\\reihan-agam\\react-js\\hiring-channel\\src\\reducers\\skill.js",["358"],"import { LOADING, LOADED, GET_SKILLS, GET_SKILLS_ERROR } from \"../actions/types\"\r\nconst initialState = {\r\n  skills: [],\r\n  error: {},\r\n  loading: true\r\n}\r\nexport default (state = initialState, action) => {\r\n  const { type, payload } = action\r\n  switch (type) {\r\n    case LOADING:\r\n      return {\r\n        ...state,\r\n        loading: true\r\n      }\r\n    case LOADED:\r\n      return {\r\n        ...state,\r\n        loading: false\r\n      }\r\n    case GET_SKILLS:\r\n      return {\r\n        ...state,\r\n        skills: payload\r\n      }\r\n    case GET_SKILLS_ERROR:\r\n      return {\r\n        ...state,\r\n        error: payload\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","D:\\reihan-agam\\react-js\\hiring-channel\\src\\actions\\skill.js",[],"D:\\reihan-agam\\react-js\\hiring-channel\\src\\actions\\jobtype.js",[],"D:\\reihan-agam\\react-js\\hiring-channel\\src\\reducers\\jobtype.js",["359"],"import { LOADING, LOADED, GET_JOB_TYPES, GET_JOB_TYPES_ERROR } from \"../actions/types\"\r\nconst initialState = {\r\n  jobtypes: [],\r\n  error: {},\r\n  loading: true\r\n}\r\nexport default (state = initialState, action) => {\r\n  const { type, payload } = action\r\n  switch (type) {\r\n    case LOADING:\r\n      return {\r\n        ...state,\r\n        loading: true\r\n      }\r\n    case LOADED:\r\n      return {\r\n        ...state,\r\n        loading: false\r\n      }\r\n    case GET_JOB_TYPES:\r\n      return {\r\n        ...state,\r\n        jobtypes: payload\r\n      }\r\n    case GET_JOB_TYPES_ERROR:\r\n      return {\r\n        ...state,\r\n        error: payload\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","D:\\reihan-agam\\react-js\\hiring-channel\\src\\components\\Company\\CompanyProfile\\ProfileSkillsItem\\ProfileSkillsItem.js",[],"D:\\reihan-agam\\react-js\\hiring-channel\\src\\components\\Company\\CompanyProfile\\ProfileDetail\\ProfileDetail.js",[],"D:\\reihan-agam\\react-js\\hiring-channel\\src\\components\\Company\\CompanyProfile\\ProfileDetail\\ProfileDetailItem\\ProfileDetailItem.js",[],"D:\\reihan-agam\\react-js\\hiring-channel\\src\\components\\Company\\CompanyProfile\\AddJob\\AddJob.js",[],"D:\\reihan-agam\\react-js\\hiring-channel\\src\\components\\Company\\CompanyProfile\\AddJob\\AddJobItem\\AddJobItem.js",["360"],"import React, { useDebugValue, useState } from \"react\"\r\nimport { Link } from \"react-router-dom\"\r\nimport { Container, Grid, Chip, Button, TextField, makeStyles } from \"@material-ui/core\"\r\nimport { API_KEY_TINYMCE } from \"../../../../../configs/constants\"\r\nimport { Editor } from \"@tinymce/tinymce-react\"\r\nimport { Toast } from \"../../../../../utils/helper\"\r\nimport RemoveIcon from \"@material-ui/icons/RemoveCircleOutlineSharp\"\r\nimport NumberFormat from \"react-number-format\"\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\"\r\n\r\nconst AddJobItem = ({ company, storeAddJob, allSkills, allJobTypes, history }) => {\r\n  const [formData, setFormData] = useState({\r\n    title: \"\",\r\n    salary: \"\"\r\n  })\r\n  const { title, salary } = formData\r\n  const [skills, setSkills] = useState([])\r\n  const [jobtypes, setJobTypes] = useState([])\r\n  const [content, setContent] = useState(\"\")\r\n  const useStyles = makeStyles(theme => ({\r\n    chip: {\r\n      \"& > *\": {\r\n        margin: theme.spacing(0.5)\r\n      }\r\n    }\r\n  }))\r\n  const classes = useStyles()\r\n  const renderedSkills =\r\n    skills &&\r\n    skills.map((option, i) => {\r\n      return (\r\n        <span className={classes.chip} key={i}>\r\n          <Chip\r\n            label={option.name}\r\n            deleteIcon={<RemoveIcon />}\r\n            onDelete={() => {\r\n              setSkills(skills.filter(entry => entry !== option))\r\n              // setSkillsDeleted(oldArray => [...oldArray, skills.filter(entry => entry === option)])\r\n            }}\r\n          />\r\n        </span>\r\n      )\r\n    })\r\n  const onChange = e => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value })\r\n  }\r\n  const onEditorChange = content => {\r\n    setContent(content)\r\n  }\r\n  const onSubmit = async e => {\r\n    e.preventDefault()\r\n    try {\r\n      let payload = {\r\n        title: title,\r\n        content: content,\r\n        salary: salary,\r\n        skills: skills,\r\n        jobtypes: jobtypes,\r\n        companyUid: company.uid\r\n      }\r\n      if (title.trim() === \"\") {\r\n        throw new Error(\"Title Required\")\r\n      }\r\n      if (content.trim() === \"\") {\r\n        throw new Error(\"Content Required\")\r\n      }\r\n      if (salary.trim() === \"\") {\r\n        throw new Error(\"Salary Required\")\r\n      }\r\n      if (skills.length === 0) {\r\n        throw new Error(\"Skills Required\")\r\n      }\r\n      if (jobtypes.length === 0) {\r\n        throw new Error(\"Job Type Required\")\r\n      }\r\n      await storeAddJob(payload, history)\r\n    } catch (err) {\r\n      Toast.fire({\r\n        icon: \"error\",\r\n        title: err.message\r\n      })\r\n    }\r\n  }\r\n  return (\r\n    <div>\r\n      <div className=\"backdrop-bottom\"></div>\r\n      <Container fixed>\r\n        <Grid container className=\"my-5\" direction=\"row\" justify=\"center\" alignItems=\"center\">\r\n          <Grid className=\"p-5 white rounded\" item md={8} xs={12}>\r\n            <form onSubmit={e => onSubmit(e)}>\r\n              <TextField onChange={onChange} value={title ?? \"\"} name=\"title\" margin=\"normal\" variant=\"outlined\" label=\"Title\" fullWidth />\r\n              <p className=\"text-gray mb-3\">Job Description</p>\r\n              <Editor\r\n                value={content ?? \"\"}\r\n                apiKey={API_KEY_TINYMCE}\r\n                init={{\r\n                  height: 400,\r\n                  menubar: false,\r\n                  valid_classes: {\r\n                    \"*\": \"\"\r\n                  },\r\n                  image_title: true,\r\n                  image_caption: true,\r\n                  plugins: [\"advlist autolink lists link image charmap print preview anchor\", \"searchreplace visualblocks code fullscreen\", \"insertdatetime media table paste code help wordcount\"],\r\n                  toolbar: \"table tabledelete | tableprops tablerowprops tablecellprops | tableinsertrowbefore tableinsertrowafter tabledeleterow | tableinsertcolbefore tableinsertcolafter tabledeletecol | undo redo | formatselect | link image | code | bold italic backcolor |  alignleft aligncenter alignright alignjustify |  bullist numlist outdent indent | removeformat | help\",\r\n                  file_picker_callback: function (cb, value, meta) {\r\n                    var input = document.createElement(\"input\")\r\n                    input.setAttribute(\"type\", \"file\")\r\n                    input.setAttribute(\"accept\", \"image/*\")\r\n                    input.onchange = function () {\r\n                      var file = this.files[0]\r\n                      var reader = new FileReader()\r\n                      reader.onload = function (e) {\r\n                        cb(e.target.result, {\r\n                          title: file.name,\r\n                          alt: file.name\r\n                        })\r\n                      }\r\n                      reader.readAsDataURL(file)\r\n                    }\r\n                    input.click()\r\n                  }\r\n                }}\r\n                onEditorChange={onEditorChange}\r\n              />\r\n              <Autocomplete\r\n                multiple\r\n                filterSelectedOptions\r\n                freeSolo\r\n                renderTags={() => {}}\r\n                value={skills ?? \"\"}\r\n                options={allSkills}\r\n                onChange={(_, value) => {\r\n                  setSkills(value)\r\n                }}\r\n                getOptionLabel={allSkills => allSkills.name ?? \"\"}\r\n                getOptionSelected={(option, value) => {\r\n                  return option.uid === value.uid\r\n                }}\r\n                renderInput={params => <TextField {...params} margin=\"normal\" label=\"Skill Requirements\" placeholder=\"Skill Requirements\" variant=\"outlined\" fullWidth />}\r\n              />\r\n              <div>{renderedSkills}</div>\r\n              <Autocomplete\r\n                multiple\r\n                filterSelectedOptions\r\n                freeSolo\r\n                value={jobtypes ?? \"\"}\r\n                options={allJobTypes}\r\n                onChange={(_, value) => {\r\n                  if (jobtypes.length > 0) {\r\n                    setJobTypes(value.splice(1))\r\n                  } else {\r\n                    setJobTypes(value)\r\n                  }\r\n                }}\r\n                getOptionLabel={allJobTypes => allJobTypes.name ?? \"\"}\r\n                getOptionSelected={(option, value) => {\r\n                  return option.uid === value.uid\r\n                }}\r\n                renderInput={params => <TextField {...params} margin=\"normal\" label=\"Job Types\" placeholder=\"Job Types\" variant=\"outlined\" fullWidth />}\r\n              />\r\n              <NumberFormat onChange={e => onChange(e)} value={salary ?? \"\"} name=\"salary\" margin=\"normal\" variant=\"outlined\" label=\"Salary\" decimalSeparator=\",\" thousandSeparator=\".\" prefix=\"IDR \" allowNegative={false} customInput={TextField} fullWidth />\r\n              <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\r\n                <Button type=\"button\" variant=\"contained\" color=\"primary\" component={Link} to=\"/companies\">\r\n                  Back\r\n                </Button>\r\n                <Button type=\"submit\" variant=\"contained\" color=\"primary\">\r\n                  Create\r\n                </Button>\r\n              </Grid>\r\n            </form>\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AddJobItem\r\n","D:\\reihan-agam\\react-js\\hiring-channel\\src\\components\\Company\\CompanyProfile\\EditJob\\EditJob.js",[],"D:\\reihan-agam\\react-js\\hiring-channel\\src\\components\\Company\\CompanyProfile\\EditJob\\EditJobItem\\EditJobItem.js",["361"],"D:\\reihan-agam\\react-js\\hiring-channel\\src\\reducers\\postjob.js",["362"],"import { LOADING, LOADED, EDIT_POST_JOB, EDIT_POST_JOB_ERROR, UPDATE_POST_JOB, UPDATE_POST_JOB_ERROR } from \"../actions/types\"\r\nconst initialState = {\r\n  postjob: {},\r\n  error: {},\r\n  loading: true\r\n}\r\nexport default (state = initialState, action) => {\r\n  const { type, payload } = action\r\n  switch (type) {\r\n    case LOADING:\r\n      return {\r\n        ...state,\r\n        loading: true\r\n      }\r\n    case LOADED:\r\n      return {\r\n        ...state,\r\n        loading: false\r\n      }\r\n    case EDIT_POST_JOB:\r\n      return {\r\n        ...state,\r\n        postjob: payload\r\n      }\r\n    case EDIT_POST_JOB_ERROR:\r\n      return {\r\n        ...state,\r\n        error: payload\r\n      }\r\n    case UPDATE_POST_JOB:\r\n      return state\r\n    case UPDATE_POST_JOB_ERROR:\r\n      return {\r\n        ...state,\r\n        error: payload\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n",{"ruleId":"363","replacedBy":"364"},{"ruleId":"365","replacedBy":"366"},{"ruleId":"367","severity":1,"message":"368","line":83,"column":10,"nodeType":"369","messageId":"370","endLine":83,"endColumn":28},{"ruleId":"367","severity":1,"message":"371","line":83,"column":30,"nodeType":"369","messageId":"370","endLine":83,"endColumn":51},{"ruleId":"372","severity":1,"message":"373","line":3,"column":1,"nodeType":"374","endLine":13,"endColumn":2},{"ruleId":"372","severity":1,"message":"373","line":8,"column":1,"nodeType":"374","endLine":42,"endColumn":2},{"ruleId":"372","severity":1,"message":"375","line":9,"column":1,"nodeType":"374","endLine":72,"endColumn":2},{"ruleId":"372","severity":1,"message":"373","line":10,"column":1,"nodeType":"374","endLine":89,"endColumn":2},{"ruleId":"372","severity":1,"message":"373","line":9,"column":1,"nodeType":"374","endLine":79,"endColumn":2},{"ruleId":"367","severity":1,"message":"376","line":2,"column":8,"nodeType":"369","messageId":"370","endLine":2,"endColumn":13},{"ruleId":"367","severity":1,"message":"377","line":4,"column":10,"nodeType":"369","messageId":"370","endLine":4,"endColumn":16},{"ruleId":"363","replacedBy":"378"},{"ruleId":"365","replacedBy":"379"},{"ruleId":"367","severity":1,"message":"380","line":3,"column":18,"nodeType":"369","messageId":"370","endLine":3,"endColumn":28},{"ruleId":"367","severity":1,"message":"381","line":3,"column":30,"nodeType":"369","messageId":"370","endLine":3,"endColumn":41},{"ruleId":"367","severity":1,"message":"382","line":3,"column":54,"nodeType":"369","messageId":"370","endLine":3,"endColumn":62},{"ruleId":"367","severity":1,"message":"383","line":3,"column":64,"nodeType":"369","messageId":"370","endLine":3,"endColumn":70},{"ruleId":"367","severity":1,"message":"384","line":3,"column":10,"nodeType":"369","messageId":"370","endLine":3,"endColumn":22},{"ruleId":"367","severity":1,"message":"385","line":3,"column":24,"nodeType":"369","messageId":"370","endLine":3,"endColumn":34},{"ruleId":"367","severity":1,"message":"386","line":52,"column":9,"nodeType":"369","messageId":"370","endLine":52,"endColumn":20},{"ruleId":"372","severity":1,"message":"375","line":2,"column":1,"nodeType":"374","endLine":10,"endColumn":2},{"ruleId":"367","severity":1,"message":"387","line":9,"column":8,"nodeType":"369","messageId":"370","endLine":9,"endColumn":12},{"ruleId":"388","severity":1,"message":"389","line":345,"column":15,"nodeType":"390","messageId":"391","endLine":345,"endColumn":17},{"ruleId":"388","severity":1,"message":"389","line":346,"column":15,"nodeType":"390","messageId":"391","endLine":346,"endColumn":17},{"ruleId":"367","severity":1,"message":"386","line":52,"column":9,"nodeType":"369","messageId":"370","endLine":52,"endColumn":20},{"ruleId":"367","severity":1,"message":"368","line":83,"column":10,"nodeType":"369","messageId":"370","endLine":83,"endColumn":28},{"ruleId":"367","severity":1,"message":"371","line":83,"column":30,"nodeType":"369","messageId":"370","endLine":83,"endColumn":51},{"ruleId":"367","severity":1,"message":"392","line":5,"column":8,"nodeType":"369","messageId":"370","endLine":5,"endColumn":23},{"ruleId":"367","severity":1,"message":"393","line":6,"column":8,"nodeType":"369","messageId":"370","endLine":6,"endColumn":20},{"ruleId":"367","severity":1,"message":"392","line":6,"column":8,"nodeType":"369","messageId":"370","endLine":6,"endColumn":23},{"ruleId":"367","severity":1,"message":"394","line":6,"column":10,"nodeType":"369","messageId":"370","endLine":6,"endColumn":25},{"ruleId":"367","severity":1,"message":"395","line":7,"column":10,"nodeType":"369","messageId":"370","endLine":7,"endColumn":16},{"ruleId":"367","severity":1,"message":"396","line":69,"column":10,"nodeType":"369","messageId":"370","endLine":69,"endColumn":16},{"ruleId":"367","severity":1,"message":"397","line":69,"column":18,"nodeType":"369","messageId":"370","endLine":69,"endColumn":27},{"ruleId":"372","severity":1,"message":"375","line":7,"column":1,"nodeType":"374","endLine":33,"endColumn":2},{"ruleId":"372","severity":1,"message":"375","line":7,"column":1,"nodeType":"374","endLine":33,"endColumn":2},{"ruleId":"367","severity":1,"message":"398","line":1,"column":17,"nodeType":"369","messageId":"370","endLine":1,"endColumn":30},{"ruleId":"388","severity":1,"message":"389","line":81,"column":37,"nodeType":"390","messageId":"391","endLine":81,"endColumn":39},{"ruleId":"372","severity":1,"message":"375","line":7,"column":1,"nodeType":"374","endLine":40,"endColumn":2},"no-native-reassign",["399"],"no-negated-in-lhs",["400"],"no-unused-vars","'mobileMoreAnchorEl' is assigned a value but never used.","Identifier","unusedVar","'setMobileMoreAnchorEl' is assigned a value but never used.","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","Assign arrow function to a variable before exporting as module default","'store' is defined but never used.","'logout' is defined but never used.",["399"],["400"],"'InputLabel' is defined but never used.","'FormControl' is defined but never used.","'MenuItem' is defined but never used.","'Select' is defined but never used.","'createStyles' is defined but never used.","'makeStyles' is defined but never used.","'StyledBadge' is assigned a value but never used.","'Swal' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'ReactHtmlParser' is defined but never used.","'defaultImage' is defined but never used.","'API_KEY_TINYMCE' is defined but never used.","'Editor' is defined but never used.","'isOpen' is assigned a value but never used.","'setIsOpen' is assigned a value but never used.","'useDebugValue' is defined but never used.","no-global-assign","no-unsafe-negation"]